package com.yizu.proj.sys.beans.gen;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

/**
 * This class was generated by MyBatis Generator.
 * This class corresponds to the database table************** circlecommentinfo_agree
*/
/**
 * This class was generated by MyBatis Generator.
 * This class corresponds to the database table************** circlecommentinfo_agree
*/
/**
 * This class was generated by MyBatis Generator.
 * This class corresponds to the database table************** circlecommentinfo_agree
*/
public class CircleCommentInfoAgreeExampleBase {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table circlecommentinfo_agree
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table circlecommentinfo_agree
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table circlecommentinfo_agree
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table circlecommentinfo_agree
     *
     * @mbggenerated
     */
    protected int limitStart = -1;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table circlecommentinfo_agree
     *
     * @mbggenerated
     */
    protected int rowsPerPage = -1;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table circlecommentinfo_agree
     *
     *
     *
     * @mbggenerated
     */
    public CircleCommentInfoAgreeExampleBase() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table circlecommentinfo_agree
     *
     * @param orderByClause String
     *
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table circlecommentinfo_agree
     *
     *
     * @return the value of java.lang.String
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table circlecommentinfo_agree
     *
     * @param distinct boolean
     *
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table circlecommentinfo_agree
     *
     *
     * @return the value of boolean
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table circlecommentinfo_agree
     *
     *
     * @return the value of java.util.List<Criteria>
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table circlecommentinfo_agree
     *
     * @param criteria Criteria
     *
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table circlecommentinfo_agree
     *
     *
     * @return the value of Criteria
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table circlecommentinfo_agree
     *
     *
     * @return the value of Criteria
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table circlecommentinfo_agree
     *
     *
     * @return the value of Criteria
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table circlecommentinfo_agree
     *
     *
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table circlecommentinfo_agree
     *
     * @param limitStart int
     *
     *
     * @mbggenerated
     */
    public void setLimitStart(int limitStart) {
        this.limitStart=limitStart;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table circlecommentinfo_agree
     *
     *
     * @return the value of int
     *
     * @mbggenerated
     */
    public int getLimitStart() {
        return limitStart;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table circlecommentinfo_agree
     *
     * @param rowsPerPage int
     *
     *
     * @mbggenerated
     */
    public void setRowsPerPage(int rowsPerPage) {
        this.rowsPerPage=rowsPerPage;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table circlecommentinfo_agree
     *
     *
     * @return the value of int
     *
     * @mbggenerated
     */
    public int getRowsPerPage() {
        return rowsPerPage;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table 
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        /**
         * criteria
         */
        protected List<Criterion> criteria;

        /**
         * 构造方法
        */
        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        /**
         * isValid 方法
         * 
         * @return boolean 
         */
        public boolean isValid() {
            return criteria.size() > 0;
        }

        /**
         * getAllCriteria方法
         * @return criteria
         */
        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        /**
         * getCriteria方法
         * @return criteria
         */
        public List<Criterion> getCriteria() {
            return criteria;
        }

        /**
         * addCriterion方法
         * @param condition 字符串
         */
        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        /**
         * addCriterion方法
         * @param condition 字符串
         * @param value Object对象
         * @param property 字符串
         */
        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        /**
         * addCriterion方法
         * @param condition 字符串
         * @param value1 Object对象
         * @param value2 Object对象
         * @param property 字符串
         */
        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        /**
         *addCriterion("aId is null");
         * @return Criteria this
        */
        public Criteria andAidIsNull() {
            addCriterion("aId is null");
            return (Criteria) this;
        }

        /**
         *addCriterion("aId is not null");
         * @return Criteria this
        */
        public Criteria andAidIsNotNull() {
            addCriterion("aId is not null");
            return (Criteria) this;
        }

        /**
         *andAidEqualTo
         * @param value aid
         * @return Criteria this
        */
        public Criteria andAidEqualTo(String value) {
            addCriterion("aId =", value, "aid");
            return (Criteria) this;
        }

        /**
         *andAidNotEqualTo
         * @param value aid
         * @return Criteria this
        */
        public Criteria andAidNotEqualTo(String value) {
            addCriterion("aId <>", value, "aid");
            return (Criteria) this;
        }

        /**
         *andAidGreaterThan
         * @param value aid
         * @return Criteria this
        */
        public Criteria andAidGreaterThan(String value) {
            addCriterion("aId >", value, "aid");
            return (Criteria) this;
        }

        /**
         *andAidGreaterThanOrEqualTo
         * @param value aid
         * @return Criteria this
        */
        public Criteria andAidGreaterThanOrEqualTo(String value) {
            addCriterion("aId >=", value, "aid");
            return (Criteria) this;
        }

        /**
         *andAidLessThan
         * @param value aid
         * @return Criteria this
        */
        public Criteria andAidLessThan(String value) {
            addCriterion("aId <", value, "aid");
            return (Criteria) this;
        }

        /**
         *andAidLessThanOrEqualTo
         * @param value aid
         * @return Criteria this
        */
        public Criteria andAidLessThanOrEqualTo(String value) {
            addCriterion("aId <=", value, "aid");
            return (Criteria) this;
        }

        /**
         *andAidLike
         * @param value aid
         * @return Criteria this
        */
        public Criteria andAidLike(String value) {
            addCriterion("aId like", value, "aid");
            return (Criteria) this;
        }

        /**
         *andAidNotLike
         * @param value aid
         * @return Criteria this
        */
        public Criteria andAidNotLike(String value) {
            addCriterion("aId not like", value, "aid");
            return (Criteria) this;
        }

        /**
         *andAidIn
         * @param values 
         * @return Criteria this
        */
        public Criteria andAidIn(List<String> values) {
            addCriterion("aId in", values, "aid");
            return (Criteria) this;
        }

        /**
         *andAidNotIn
         * @param values 
         * @return Criteria this
        */
        public Criteria andAidNotIn(List<String> values) {
            addCriterion("aId not in", values, "aid");
            return (Criteria) this;
        }

        /**
         *andAidBetween
         * @param value1 
         * @param value2 
         * @return Criteria this
        */
        public Criteria andAidBetween(String value1, String value2) {
            addCriterion("aId between", value1, value2, "aid");
            return (Criteria) this;
        }

        /**
         *andAidNotBetween
         * @param value1 
         * @param value2 
         * @return Criteria this
        */
        public Criteria andAidNotBetween(String value1, String value2) {
            addCriterion("aId not between", value1, value2, "aid");
            return (Criteria) this;
        }

        /**
         *addCriterion("ccId is null");
         * @return Criteria this
        */
        public Criteria andCcidIsNull() {
            addCriterion("ccId is null");
            return (Criteria) this;
        }

        /**
         *addCriterion("ccId is not null");
         * @return Criteria this
        */
        public Criteria andCcidIsNotNull() {
            addCriterion("ccId is not null");
            return (Criteria) this;
        }

        /**
         *andCcidEqualTo
         * @param value ccid
         * @return Criteria this
        */
        public Criteria andCcidEqualTo(String value) {
            addCriterion("ccId =", value, "ccid");
            return (Criteria) this;
        }

        /**
         *andCcidNotEqualTo
         * @param value ccid
         * @return Criteria this
        */
        public Criteria andCcidNotEqualTo(String value) {
            addCriterion("ccId <>", value, "ccid");
            return (Criteria) this;
        }

        /**
         *andCcidGreaterThan
         * @param value ccid
         * @return Criteria this
        */
        public Criteria andCcidGreaterThan(String value) {
            addCriterion("ccId >", value, "ccid");
            return (Criteria) this;
        }

        /**
         *andCcidGreaterThanOrEqualTo
         * @param value ccid
         * @return Criteria this
        */
        public Criteria andCcidGreaterThanOrEqualTo(String value) {
            addCriterion("ccId >=", value, "ccid");
            return (Criteria) this;
        }

        /**
         *andCcidLessThan
         * @param value ccid
         * @return Criteria this
        */
        public Criteria andCcidLessThan(String value) {
            addCriterion("ccId <", value, "ccid");
            return (Criteria) this;
        }

        /**
         *andCcidLessThanOrEqualTo
         * @param value ccid
         * @return Criteria this
        */
        public Criteria andCcidLessThanOrEqualTo(String value) {
            addCriterion("ccId <=", value, "ccid");
            return (Criteria) this;
        }

        /**
         *andCcidLike
         * @param value ccid
         * @return Criteria this
        */
        public Criteria andCcidLike(String value) {
            addCriterion("ccId like", value, "ccid");
            return (Criteria) this;
        }

        /**
         *andCcidNotLike
         * @param value ccid
         * @return Criteria this
        */
        public Criteria andCcidNotLike(String value) {
            addCriterion("ccId not like", value, "ccid");
            return (Criteria) this;
        }

        /**
         *andCcidIn
         * @param values 
         * @return Criteria this
        */
        public Criteria andCcidIn(List<String> values) {
            addCriterion("ccId in", values, "ccid");
            return (Criteria) this;
        }

        /**
         *andCcidNotIn
         * @param values 
         * @return Criteria this
        */
        public Criteria andCcidNotIn(List<String> values) {
            addCriterion("ccId not in", values, "ccid");
            return (Criteria) this;
        }

        /**
         *andCcidBetween
         * @param value1 
         * @param value2 
         * @return Criteria this
        */
        public Criteria andCcidBetween(String value1, String value2) {
            addCriterion("ccId between", value1, value2, "ccid");
            return (Criteria) this;
        }

        /**
         *andCcidNotBetween
         * @param value1 
         * @param value2 
         * @return Criteria this
        */
        public Criteria andCcidNotBetween(String value1, String value2) {
            addCriterion("ccId not between", value1, value2, "ccid");
            return (Criteria) this;
        }

        /**
         *addCriterion("userid is null");
         * @return Criteria this
        */
        public Criteria andUseridIsNull() {
            addCriterion("userid is null");
            return (Criteria) this;
        }

        /**
         *addCriterion("userid is not null");
         * @return Criteria this
        */
        public Criteria andUseridIsNotNull() {
            addCriterion("userid is not null");
            return (Criteria) this;
        }

        /**
         *andUseridEqualTo
         * @param value userid
         * @return Criteria this
        */
        public Criteria andUseridEqualTo(Integer value) {
            addCriterion("userid =", value, "userid");
            return (Criteria) this;
        }

        /**
         *andUseridNotEqualTo
         * @param value userid
         * @return Criteria this
        */
        public Criteria andUseridNotEqualTo(Integer value) {
            addCriterion("userid <>", value, "userid");
            return (Criteria) this;
        }

        /**
         *andUseridGreaterThan
         * @param value userid
         * @return Criteria this
        */
        public Criteria andUseridGreaterThan(Integer value) {
            addCriterion("userid >", value, "userid");
            return (Criteria) this;
        }

        /**
         *andUseridGreaterThanOrEqualTo
         * @param value userid
         * @return Criteria this
        */
        public Criteria andUseridGreaterThanOrEqualTo(Integer value) {
            addCriterion("userid >=", value, "userid");
            return (Criteria) this;
        }

        /**
         *andUseridLessThan
         * @param value userid
         * @return Criteria this
        */
        public Criteria andUseridLessThan(Integer value) {
            addCriterion("userid <", value, "userid");
            return (Criteria) this;
        }

        /**
         *andUseridLessThanOrEqualTo
         * @param value userid
         * @return Criteria this
        */
        public Criteria andUseridLessThanOrEqualTo(Integer value) {
            addCriterion("userid <=", value, "userid");
            return (Criteria) this;
        }

        /**
         *andUseridIn
         * @param values 
         * @return Criteria this
        */
        public Criteria andUseridIn(List<Integer> values) {
            addCriterion("userid in", values, "userid");
            return (Criteria) this;
        }

        /**
         *andUseridNotIn
         * @param values 
         * @return Criteria this
        */
        public Criteria andUseridNotIn(List<Integer> values) {
            addCriterion("userid not in", values, "userid");
            return (Criteria) this;
        }

        /**
         *andUseridBetween
         * @param value1 
         * @param value2 
         * @return Criteria this
        */
        public Criteria andUseridBetween(Integer value1, Integer value2) {
            addCriterion("userid between", value1, value2, "userid");
            return (Criteria) this;
        }

        /**
         *andUseridNotBetween
         * @param value1 
         * @param value2 
         * @return Criteria this
        */
        public Criteria andUseridNotBetween(Integer value1, Integer value2) {
            addCriterion("userid not between", value1, value2, "userid");
            return (Criteria) this;
        }

        /**
         *addCriterion("agreeDate is null");
         * @return Criteria this
        */
        public Criteria andAgreedateIsNull() {
            addCriterion("agreeDate is null");
            return (Criteria) this;
        }

        /**
         *addCriterion("agreeDate is not null");
         * @return Criteria this
        */
        public Criteria andAgreedateIsNotNull() {
            addCriterion("agreeDate is not null");
            return (Criteria) this;
        }

        /**
         *andAgreedateEqualTo
         * @param value agreedate
         * @return Criteria this
        */
        public Criteria andAgreedateEqualTo(Date value) {
            addCriterion("agreeDate =", value, "agreedate");
            return (Criteria) this;
        }

        /**
         *andAgreedateNotEqualTo
         * @param value agreedate
         * @return Criteria this
        */
        public Criteria andAgreedateNotEqualTo(Date value) {
            addCriterion("agreeDate <>", value, "agreedate");
            return (Criteria) this;
        }

        /**
         *andAgreedateGreaterThan
         * @param value agreedate
         * @return Criteria this
        */
        public Criteria andAgreedateGreaterThan(Date value) {
            addCriterion("agreeDate >", value, "agreedate");
            return (Criteria) this;
        }

        /**
         *andAgreedateGreaterThanOrEqualTo
         * @param value agreedate
         * @return Criteria this
        */
        public Criteria andAgreedateGreaterThanOrEqualTo(Date value) {
            addCriterion("agreeDate >=", value, "agreedate");
            return (Criteria) this;
        }

        /**
         *andAgreedateLessThan
         * @param value agreedate
         * @return Criteria this
        */
        public Criteria andAgreedateLessThan(Date value) {
            addCriterion("agreeDate <", value, "agreedate");
            return (Criteria) this;
        }

        /**
         *andAgreedateLessThanOrEqualTo
         * @param value agreedate
         * @return Criteria this
        */
        public Criteria andAgreedateLessThanOrEqualTo(Date value) {
            addCriterion("agreeDate <=", value, "agreedate");
            return (Criteria) this;
        }

        /**
         *andAgreedateIn
         * @param values 
         * @return Criteria this
        */
        public Criteria andAgreedateIn(List<Date> values) {
            addCriterion("agreeDate in", values, "agreedate");
            return (Criteria) this;
        }

        /**
         *andAgreedateNotIn
         * @param values 
         * @return Criteria this
        */
        public Criteria andAgreedateNotIn(List<Date> values) {
            addCriterion("agreeDate not in", values, "agreedate");
            return (Criteria) this;
        }

        /**
         *andAgreedateBetween
         * @param value1 
         * @param value2 
         * @return Criteria this
        */
        public Criteria andAgreedateBetween(Date value1, Date value2) {
            addCriterion("agreeDate between", value1, value2, "agreedate");
            return (Criteria) this;
        }

        /**
         *andAgreedateNotBetween
         * @param value1 
         * @param value2 
         * @return Criteria this
        */
        public Criteria andAgreedateNotBetween(Date value1, Date value2) {
            addCriterion("agreeDate not between", value1, value2, "agreedate");
            return (Criteria) this;
        }

        /**
         *addCriterion("notAgreeDate is null");
         * @return Criteria this
        */
        public Criteria andNotagreedateIsNull() {
            addCriterion("notAgreeDate is null");
            return (Criteria) this;
        }

        /**
         *addCriterion("notAgreeDate is not null");
         * @return Criteria this
        */
        public Criteria andNotagreedateIsNotNull() {
            addCriterion("notAgreeDate is not null");
            return (Criteria) this;
        }

        /**
         *andNotagreedateEqualTo
         * @param value notagreedate
         * @return Criteria this
        */
        public Criteria andNotagreedateEqualTo(Date value) {
            addCriterion("notAgreeDate =", value, "notagreedate");
            return (Criteria) this;
        }

        /**
         *andNotagreedateNotEqualTo
         * @param value notagreedate
         * @return Criteria this
        */
        public Criteria andNotagreedateNotEqualTo(Date value) {
            addCriterion("notAgreeDate <>", value, "notagreedate");
            return (Criteria) this;
        }

        /**
         *andNotagreedateGreaterThan
         * @param value notagreedate
         * @return Criteria this
        */
        public Criteria andNotagreedateGreaterThan(Date value) {
            addCriterion("notAgreeDate >", value, "notagreedate");
            return (Criteria) this;
        }

        /**
         *andNotagreedateGreaterThanOrEqualTo
         * @param value notagreedate
         * @return Criteria this
        */
        public Criteria andNotagreedateGreaterThanOrEqualTo(Date value) {
            addCriterion("notAgreeDate >=", value, "notagreedate");
            return (Criteria) this;
        }

        /**
         *andNotagreedateLessThan
         * @param value notagreedate
         * @return Criteria this
        */
        public Criteria andNotagreedateLessThan(Date value) {
            addCriterion("notAgreeDate <", value, "notagreedate");
            return (Criteria) this;
        }

        /**
         *andNotagreedateLessThanOrEqualTo
         * @param value notagreedate
         * @return Criteria this
        */
        public Criteria andNotagreedateLessThanOrEqualTo(Date value) {
            addCriterion("notAgreeDate <=", value, "notagreedate");
            return (Criteria) this;
        }

        /**
         *andNotagreedateIn
         * @param values 
         * @return Criteria this
        */
        public Criteria andNotagreedateIn(List<Date> values) {
            addCriterion("notAgreeDate in", values, "notagreedate");
            return (Criteria) this;
        }

        /**
         *andNotagreedateNotIn
         * @param values 
         * @return Criteria this
        */
        public Criteria andNotagreedateNotIn(List<Date> values) {
            addCriterion("notAgreeDate not in", values, "notagreedate");
            return (Criteria) this;
        }

        /**
         *andNotagreedateBetween
         * @param value1 
         * @param value2 
         * @return Criteria this
        */
        public Criteria andNotagreedateBetween(Date value1, Date value2) {
            addCriterion("notAgreeDate between", value1, value2, "notagreedate");
            return (Criteria) this;
        }

        /**
         *andNotagreedateNotBetween
         * @param value1 
         * @param value2 
         * @return Criteria this
        */
        public Criteria andNotagreedateNotBetween(Date value1, Date value2) {
            addCriterion("notAgreeDate not between", value1, value2, "notagreedate");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table circlecommentinfo_agree
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        /**
         * 构造方法
         * 继承父类
        */
        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table 
     *
     * @mbggenerated
     */
    public static class Criterion {
        /**
         * condition
         */
        private String condition;

        /**
         * value
         */
        private Object value;

        /**
         * secondValue
         */
        private Object secondValue;

        /**
         * noValue
         */
        private boolean noValue;

        /**
         * singleValue
         */
        private boolean singleValue;

        /**
         * betweenValue
         */
        private boolean betweenValue;

        /**
         * listValue
         */
        private boolean listValue;

        /**
         * typeHandler
         */
        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        /**
         * Criterion构造方法
         * 继承父类
         * @param condition 字符串
         */
        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        /**
         * Criterion构造方法
         * 继承父类
         * @param condition 字符串
         * @param value object对象
         * @param typeHandler 字符串
         */
        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        /**
         * Criterion构造方法
         * @param condition 字符串
         * @param value object对象
         */
        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        /**
         * Criterion构造方法
         * 继承父类
         * @param condition 字符串
         * @param value object对象
         * @param secondValue object对象
         * @param typeHandler 字符串
         */
        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        /**
         * Criterion构造方法
         * 继承父类
         * @param condition 字符串
         * @param value object对象
         * @param secondValue object对象
         */
        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}