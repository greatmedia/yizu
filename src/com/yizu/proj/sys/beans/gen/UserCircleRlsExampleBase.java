package com.yizu.proj.sys.beans.gen;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

/**
 * This class was generated by MyBatis Generator.
 * This class corresponds to the database table************** user_circle_rls
 */
/**
 * This class was generated by MyBatis Generator.
 * This class corresponds to the database table************** user_circle_rls
 */
/**
 * This class was generated by MyBatis Generator.
 * This class corresponds to the database table************** user_circle_rls
 */
public class UserCircleRlsExampleBase {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table user_circle_rls
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table user_circle_rls
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table user_circle_rls
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table user_circle_rls
     *
     * @mbggenerated
     */
    protected int limitStart = -1;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table user_circle_rls
     *
     * @mbggenerated
     */
    protected int rowsPerPage = -1;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_circle_rls
     *
     *
     *
     * @mbggenerated
     */
    public UserCircleRlsExampleBase() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_circle_rls
     *
     * @param orderByClause String
     *
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_circle_rls
     *
     *
     * @return the value of java.lang.String
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_circle_rls
     *
     * @param distinct boolean
     *
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_circle_rls
     *
     *
     * @return the value of boolean
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_circle_rls
     *
     *
     * @return the value of java.util.List<Criteria>
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_circle_rls
     *
     * @param criteria Criteria
     *
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_circle_rls
     *
     *
     * @return the value of Criteria
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_circle_rls
     *
     *
     * @return the value of Criteria
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_circle_rls
     *
     *
     * @return the value of Criteria
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_circle_rls
     *
     *
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_circle_rls
     *
     * @param limitStart int
     *
     *
     * @mbggenerated
     */
    public void setLimitStart(int limitStart) {
        this.limitStart=limitStart;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_circle_rls
     *
     *
     * @return the value of int
     *
     * @mbggenerated
     */
    public int getLimitStart() {
        return limitStart;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_circle_rls
     *
     * @param rowsPerPage int
     *
     *
     * @mbggenerated
     */
    public void setRowsPerPage(int rowsPerPage) {
        this.rowsPerPage=rowsPerPage;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_circle_rls
     *
     *
     * @return the value of int
     *
     * @mbggenerated
     */
    public int getRowsPerPage() {
        return rowsPerPage;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table 
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        /**
         * criteria
         */
        protected List<Criterion> criteria;

        /**
         * 构造方法
         */
        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        /**
         * isValid 方法
         *
         * @return boolean
         */
        public boolean isValid() {
            return criteria.size() > 0;
        }

        /**
         * getAllCriteria方法
         * @return criteria
         */
        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        /**
         * getCriteria方法
         * @return criteria
         */
        public List<Criterion> getCriteria() {
            return criteria;
        }

        /**
         * addCriterion方法
         * @param condition 字符串
         */
        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        /**
         * addCriterion方法
         * @param condition 字符串
         * @param value Object对象
         * @param property 字符串
         */
        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        /**
         * addCriterion方法
         * @param condition 字符串
         * @param value1 Object对象
         * @param value2 Object对象
         * @param property 字符串
         */
        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        /**
         *addCriterion("ucid is null");
         * @return Criteria this
         */
        public Criteria andUcidIsNull() {
            addCriterion("ucid is null");
            return (Criteria) this;
        }

        /**
         *addCriterion("ucid is not null");
         * @return Criteria this
         */
        public Criteria andUcidIsNotNull() {
            addCriterion("ucid is not null");
            return (Criteria) this;
        }

        /**
         *andUcidEqualTo
         * @param value ucid
         * @return Criteria this
         */
        public Criteria andUcidEqualTo(String value) {
            addCriterion("ucid =", value, "ucid");
            return (Criteria) this;
        }

        /**
         *andUcidNotEqualTo
         * @param value ucid
         * @return Criteria this
         */
        public Criteria andUcidNotEqualTo(String value) {
            addCriterion("ucid <>", value, "ucid");
            return (Criteria) this;
        }

        /**
         *andUcidGreaterThan
         * @param value ucid
         * @return Criteria this
         */
        public Criteria andUcidGreaterThan(String value) {
            addCriterion("ucid >", value, "ucid");
            return (Criteria) this;
        }

        /**
         *andUcidGreaterThanOrEqualTo
         * @param value ucid
         * @return Criteria this
         */
        public Criteria andUcidGreaterThanOrEqualTo(String value) {
            addCriterion("ucid >=", value, "ucid");
            return (Criteria) this;
        }

        /**
         *andUcidLessThan
         * @param value ucid
         * @return Criteria this
         */
        public Criteria andUcidLessThan(String value) {
            addCriterion("ucid <", value, "ucid");
            return (Criteria) this;
        }

        /**
         *andUcidLessThanOrEqualTo
         * @param value ucid
         * @return Criteria this
         */
        public Criteria andUcidLessThanOrEqualTo(String value) {
            addCriterion("ucid <=", value, "ucid");
            return (Criteria) this;
        }

        /**
         *andUcidLike
         * @param value ucid
         * @return Criteria this
         */
        public Criteria andUcidLike(String value) {
            addCriterion("ucid like", value, "ucid");
            return (Criteria) this;
        }

        /**
         *andUcidNotLike
         * @param value ucid
         * @return Criteria this
         */
        public Criteria andUcidNotLike(String value) {
            addCriterion("ucid not like", value, "ucid");
            return (Criteria) this;
        }

        /**
         *andUcidIn
         * @param values
         * @return Criteria this
         */
        public Criteria andUcidIn(List<String> values) {
            addCriterion("ucid in", values, "ucid");
            return (Criteria) this;
        }

        /**
         *andUcidNotIn
         * @param values
         * @return Criteria this
         */
        public Criteria andUcidNotIn(List<String> values) {
            addCriterion("ucid not in", values, "ucid");
            return (Criteria) this;
        }

        /**
         *andUcidBetween
         * @param value1
         * @param value2
         * @return Criteria this
         */
        public Criteria andUcidBetween(String value1, String value2) {
            addCriterion("ucid between", value1, value2, "ucid");
            return (Criteria) this;
        }

        /**
         *andUcidNotBetween
         * @param value1
         * @param value2
         * @return Criteria this
         */
        public Criteria andUcidNotBetween(String value1, String value2) {
            addCriterion("ucid not between", value1, value2, "ucid");
            return (Criteria) this;
        }

        /**
         *addCriterion("circleId is null");
         * @return Criteria this
         */
        public Criteria andCircleidIsNull() {
            addCriterion("circleId is null");
            return (Criteria) this;
        }

        /**
         *addCriterion("circleId is not null");
         * @return Criteria this
         */
        public Criteria andCircleidIsNotNull() {
            addCriterion("circleId is not null");
            return (Criteria) this;
        }

        /**
         *andCircleidEqualTo
         * @param value circleid
         * @return Criteria this
         */
        public Criteria andCircleidEqualTo(String value) {
            addCriterion("circleId =", value, "circleid");
            return (Criteria) this;
        }

        /**
         *andCircleidNotEqualTo
         * @param value circleid
         * @return Criteria this
         */
        public Criteria andCircleidNotEqualTo(String value) {
            addCriterion("circleId <>", value, "circleid");
            return (Criteria) this;
        }

        /**
         *andCircleidGreaterThan
         * @param value circleid
         * @return Criteria this
         */
        public Criteria andCircleidGreaterThan(String value) {
            addCriterion("circleId >", value, "circleid");
            return (Criteria) this;
        }

        /**
         *andCircleidGreaterThanOrEqualTo
         * @param value circleid
         * @return Criteria this
         */
        public Criteria andCircleidGreaterThanOrEqualTo(String value) {
            addCriterion("circleId >=", value, "circleid");
            return (Criteria) this;
        }

        /**
         *andCircleidLessThan
         * @param value circleid
         * @return Criteria this
         */
        public Criteria andCircleidLessThan(String value) {
            addCriterion("circleId <", value, "circleid");
            return (Criteria) this;
        }

        /**
         *andCircleidLessThanOrEqualTo
         * @param value circleid
         * @return Criteria this
         */
        public Criteria andCircleidLessThanOrEqualTo(String value) {
            addCriterion("circleId <=", value, "circleid");
            return (Criteria) this;
        }

        /**
         *andCircleidLike
         * @param value circleid
         * @return Criteria this
         */
        public Criteria andCircleidLike(String value) {
            addCriterion("circleId like", value, "circleid");
            return (Criteria) this;
        }

        /**
         *andCircleidNotLike
         * @param value circleid
         * @return Criteria this
         */
        public Criteria andCircleidNotLike(String value) {
            addCriterion("circleId not like", value, "circleid");
            return (Criteria) this;
        }

        /**
         *andCircleidIn
         * @param values
         * @return Criteria this
         */
        public Criteria andCircleidIn(List<String> values) {
            addCriterion("circleId in", values, "circleid");
            return (Criteria) this;
        }

        /**
         *andCircleidNotIn
         * @param values
         * @return Criteria this
         */
        public Criteria andCircleidNotIn(List<String> values) {
            addCriterion("circleId not in", values, "circleid");
            return (Criteria) this;
        }

        /**
         *andCircleidBetween
         * @param value1
         * @param value2
         * @return Criteria this
         */
        public Criteria andCircleidBetween(String value1, String value2) {
            addCriterion("circleId between", value1, value2, "circleid");
            return (Criteria) this;
        }

        /**
         *andCircleidNotBetween
         * @param value1
         * @param value2
         * @return Criteria this
         */
        public Criteria andCircleidNotBetween(String value1, String value2) {
            addCriterion("circleId not between", value1, value2, "circleid");
            return (Criteria) this;
        }

        /**
         *addCriterion("userId is null");
         * @return Criteria this
         */
        public Criteria andUseridIsNull() {
            addCriterion("userId is null");
            return (Criteria) this;
        }

        /**
         *addCriterion("userId is not null");
         * @return Criteria this
         */
        public Criteria andUseridIsNotNull() {
            addCriterion("userId is not null");
            return (Criteria) this;
        }

        /**
         *andUseridEqualTo
         * @param value userid
         * @return Criteria this
         */
        public Criteria andUseridEqualTo(Integer value) {
            addCriterion("userId =", value, "userid");
            return (Criteria) this;
        }

        /**
         *andUseridNotEqualTo
         * @param value userid
         * @return Criteria this
         */
        public Criteria andUseridNotEqualTo(Integer value) {
            addCriterion("userId <>", value, "userid");
            return (Criteria) this;
        }

        /**
         *andUseridGreaterThan
         * @param value userid
         * @return Criteria this
         */
        public Criteria andUseridGreaterThan(Integer value) {
            addCriterion("userId >", value, "userid");
            return (Criteria) this;
        }

        /**
         *andUseridGreaterThanOrEqualTo
         * @param value userid
         * @return Criteria this
         */
        public Criteria andUseridGreaterThanOrEqualTo(Integer value) {
            addCriterion("userId >=", value, "userid");
            return (Criteria) this;
        }

        /**
         *andUseridLessThan
         * @param value userid
         * @return Criteria this
         */
        public Criteria andUseridLessThan(Integer value) {
            addCriterion("userId <", value, "userid");
            return (Criteria) this;
        }

        /**
         *andUseridLessThanOrEqualTo
         * @param value userid
         * @return Criteria this
         */
        public Criteria andUseridLessThanOrEqualTo(Integer value) {
            addCriterion("userId <=", value, "userid");
            return (Criteria) this;
        }

        /**
         *andUseridIn
         * @param values
         * @return Criteria this
         */
        public Criteria andUseridIn(List<Integer> values) {
            addCriterion("userId in", values, "userid");
            return (Criteria) this;
        }

        /**
         *andUseridNotIn
         * @param values
         * @return Criteria this
         */
        public Criteria andUseridNotIn(List<Integer> values) {
            addCriterion("userId not in", values, "userid");
            return (Criteria) this;
        }

        /**
         *andUseridBetween
         * @param value1
         * @param value2
         * @return Criteria this
         */
        public Criteria andUseridBetween(Integer value1, Integer value2) {
            addCriterion("userId between", value1, value2, "userid");
            return (Criteria) this;
        }

        /**
         *andUseridNotBetween
         * @param value1
         * @param value2
         * @return Criteria this
         */
        public Criteria andUseridNotBetween(Integer value1, Integer value2) {
            addCriterion("userId not between", value1, value2, "userid");
            return (Criteria) this;
        }

        /**
         *addCriterion("uc_role is null");
         * @return Criteria this
         */
        public Criteria andUcRoleIsNull() {
            addCriterion("uc_role is null");
            return (Criteria) this;
        }

        /**
         *addCriterion("uc_role is not null");
         * @return Criteria this
         */
        public Criteria andUcRoleIsNotNull() {
            addCriterion("uc_role is not null");
            return (Criteria) this;
        }

        /**
         *andUcRoleEqualTo
         * @param value ucRole
         * @return Criteria this
         */
        public Criteria andUcRoleEqualTo(Integer value) {
            addCriterion("uc_role =", value, "ucRole");
            return (Criteria) this;
        }

        /**
         *andUcRoleNotEqualTo
         * @param value ucRole
         * @return Criteria this
         */
        public Criteria andUcRoleNotEqualTo(Integer value) {
            addCriterion("uc_role <>", value, "ucRole");
            return (Criteria) this;
        }

        /**
         *andUcRoleGreaterThan
         * @param value ucRole
         * @return Criteria this
         */
        public Criteria andUcRoleGreaterThan(Integer value) {
            addCriterion("uc_role >", value, "ucRole");
            return (Criteria) this;
        }

        /**
         *andUcRoleGreaterThanOrEqualTo
         * @param value ucRole
         * @return Criteria this
         */
        public Criteria andUcRoleGreaterThanOrEqualTo(Integer value) {
            addCriterion("uc_role >=", value, "ucRole");
            return (Criteria) this;
        }

        /**
         *andUcRoleLessThan
         * @param value ucRole
         * @return Criteria this
         */
        public Criteria andUcRoleLessThan(Integer value) {
            addCriterion("uc_role <", value, "ucRole");
            return (Criteria) this;
        }

        /**
         *andUcRoleLessThanOrEqualTo
         * @param value ucRole
         * @return Criteria this
         */
        public Criteria andUcRoleLessThanOrEqualTo(Integer value) {
            addCriterion("uc_role <=", value, "ucRole");
            return (Criteria) this;
        }

        /**
         *andUcRoleIn
         * @param values
         * @return Criteria this
         */
        public Criteria andUcRoleIn(List<Integer> values) {
            addCriterion("uc_role in", values, "ucRole");
            return (Criteria) this;
        }

        /**
         *andUcRoleNotIn
         * @param values
         * @return Criteria this
         */
        public Criteria andUcRoleNotIn(List<Integer> values) {
            addCriterion("uc_role not in", values, "ucRole");
            return (Criteria) this;
        }

        /**
         *andUcRoleBetween
         * @param value1
         * @param value2
         * @return Criteria this
         */
        public Criteria andUcRoleBetween(Integer value1, Integer value2) {
            addCriterion("uc_role between", value1, value2, "ucRole");
            return (Criteria) this;
        }

        /**
         *andUcRoleNotBetween
         * @param value1
         * @param value2
         * @return Criteria this
         */
        public Criteria andUcRoleNotBetween(Integer value1, Integer value2) {
            addCriterion("uc_role not between", value1, value2, "ucRole");
            return (Criteria) this;
        }

        /**
         *addCriterion("joinDateTime is null");
         * @return Criteria this
         */
        public Criteria andJoindatetimeIsNull() {
            addCriterion("joinDateTime is null");
            return (Criteria) this;
        }

        /**
         *addCriterion("joinDateTime is not null");
         * @return Criteria this
         */
        public Criteria andJoindatetimeIsNotNull() {
            addCriterion("joinDateTime is not null");
            return (Criteria) this;
        }

        /**
         *andJoindatetimeEqualTo
         * @param value joindatetime
         * @return Criteria this
         */
        public Criteria andJoindatetimeEqualTo(Date value) {
            addCriterion("joinDateTime =", value, "joindatetime");
            return (Criteria) this;
        }

        /**
         *andJoindatetimeNotEqualTo
         * @param value joindatetime
         * @return Criteria this
         */
        public Criteria andJoindatetimeNotEqualTo(Date value) {
            addCriterion("joinDateTime <>", value, "joindatetime");
            return (Criteria) this;
        }

        /**
         *andJoindatetimeGreaterThan
         * @param value joindatetime
         * @return Criteria this
         */
        public Criteria andJoindatetimeGreaterThan(Date value) {
            addCriterion("joinDateTime >", value, "joindatetime");
            return (Criteria) this;
        }

        /**
         *andJoindatetimeGreaterThanOrEqualTo
         * @param value joindatetime
         * @return Criteria this
         */
        public Criteria andJoindatetimeGreaterThanOrEqualTo(Date value) {
            addCriterion("joinDateTime >=", value, "joindatetime");
            return (Criteria) this;
        }

        /**
         *andJoindatetimeLessThan
         * @param value joindatetime
         * @return Criteria this
         */
        public Criteria andJoindatetimeLessThan(Date value) {
            addCriterion("joinDateTime <", value, "joindatetime");
            return (Criteria) this;
        }

        /**
         *andJoindatetimeLessThanOrEqualTo
         * @param value joindatetime
         * @return Criteria this
         */
        public Criteria andJoindatetimeLessThanOrEqualTo(Date value) {
            addCriterion("joinDateTime <=", value, "joindatetime");
            return (Criteria) this;
        }

        /**
         *andJoindatetimeIn
         * @param values
         * @return Criteria this
         */
        public Criteria andJoindatetimeIn(List<Date> values) {
            addCriterion("joinDateTime in", values, "joindatetime");
            return (Criteria) this;
        }

        /**
         *andJoindatetimeNotIn
         * @param values
         * @return Criteria this
         */
        public Criteria andJoindatetimeNotIn(List<Date> values) {
            addCriterion("joinDateTime not in", values, "joindatetime");
            return (Criteria) this;
        }

        /**
         *andJoindatetimeBetween
         * @param value1
         * @param value2
         * @return Criteria this
         */
        public Criteria andJoindatetimeBetween(Date value1, Date value2) {
            addCriterion("joinDateTime between", value1, value2, "joindatetime");
            return (Criteria) this;
        }

        /**
         *andJoindatetimeNotBetween
         * @param value1
         * @param value2
         * @return Criteria this
         */
        public Criteria andJoindatetimeNotBetween(Date value1, Date value2) {
            addCriterion("joinDateTime not between", value1, value2, "joindatetime");
            return (Criteria) this;
        }

        /**
         *addCriterion("jtype is null");
         * @return Criteria this
         */
        public Criteria andJtypeIsNull() {
            addCriterion("jtype is null");
            return (Criteria) this;
        }

        /**
         *addCriterion("jtype is not null");
         * @return Criteria this
         */
        public Criteria andJtypeIsNotNull() {
            addCriterion("jtype is not null");
            return (Criteria) this;
        }

        /**
         *andJtypeEqualTo
         * @param value jtype
         * @return Criteria this
         */
        public Criteria andJtypeEqualTo(String value) {
            addCriterion("jtype =", value, "jtype");
            return (Criteria) this;
        }

        /**
         *andJtypeNotEqualTo
         * @param value jtype
         * @return Criteria this
         */
        public Criteria andJtypeNotEqualTo(String value) {
            addCriterion("jtype <>", value, "jtype");
            return (Criteria) this;
        }

        /**
         *andJtypeGreaterThan
         * @param value jtype
         * @return Criteria this
         */
        public Criteria andJtypeGreaterThan(String value) {
            addCriterion("jtype >", value, "jtype");
            return (Criteria) this;
        }

        /**
         *andJtypeGreaterThanOrEqualTo
         * @param value jtype
         * @return Criteria this
         */
        public Criteria andJtypeGreaterThanOrEqualTo(String value) {
            addCriterion("jtype >=", value, "jtype");
            return (Criteria) this;
        }

        /**
         *andJtypeLessThan
         * @param value jtype
         * @return Criteria this
         */
        public Criteria andJtypeLessThan(String value) {
            addCriterion("jtype <", value, "jtype");
            return (Criteria) this;
        }

        /**
         *andJtypeLessThanOrEqualTo
         * @param value jtype
         * @return Criteria this
         */
        public Criteria andJtypeLessThanOrEqualTo(String value) {
            addCriterion("jtype <=", value, "jtype");
            return (Criteria) this;
        }

        /**
         *andJtypeLike
         * @param value jtype
         * @return Criteria this
         */
        public Criteria andJtypeLike(String value) {
            addCriterion("jtype like", value, "jtype");
            return (Criteria) this;
        }

        /**
         *andJtypeNotLike
         * @param value jtype
         * @return Criteria this
         */
        public Criteria andJtypeNotLike(String value) {
            addCriterion("jtype not like", value, "jtype");
            return (Criteria) this;
        }

        /**
         *andJtypeIn
         * @param values
         * @return Criteria this
         */
        public Criteria andJtypeIn(List<String> values) {
            addCriterion("jtype in", values, "jtype");
            return (Criteria) this;
        }

        /**
         *andJtypeNotIn
         * @param values
         * @return Criteria this
         */
        public Criteria andJtypeNotIn(List<String> values) {
            addCriterion("jtype not in", values, "jtype");
            return (Criteria) this;
        }

        /**
         *andJtypeBetween
         * @param value1
         * @param value2
         * @return Criteria this
         */
        public Criteria andJtypeBetween(String value1, String value2) {
            addCriterion("jtype between", value1, value2, "jtype");
            return (Criteria) this;
        }

        /**
         *andJtypeNotBetween
         * @param value1
         * @param value2
         * @return Criteria this
         */
        public Criteria andJtypeNotBetween(String value1, String value2) {
            addCriterion("jtype not between", value1, value2, "jtype");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table user_circle_rls
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        /**
         * 构造方法
         * 继承父类
         */
        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table 
     *
     * @mbggenerated
     */
    public static class Criterion {
        /**
         * condition
         */
        private String condition;

        /**
         * value
         */
        private Object value;

        /**
         * secondValue
         */
        private Object secondValue;

        /**
         * noValue
         */
        private boolean noValue;

        /**
         * singleValue
         */
        private boolean singleValue;

        /**
         * betweenValue
         */
        private boolean betweenValue;

        /**
         * listValue
         */
        private boolean listValue;

        /**
         * typeHandler
         */
        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        /**
         * Criterion构造方法
         * 继承父类
         * @param condition 字符串
         */
        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        /**
         * Criterion构造方法
         * 继承父类
         * @param condition 字符串
         * @param value object对象
         * @param typeHandler 字符串
         */
        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        /**
         * Criterion构造方法
         * @param condition 字符串
         * @param value object对象
         */
        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        /**
         * Criterion构造方法
         * 继承父类
         * @param condition 字符串
         * @param value object对象
         * @param secondValue object对象
         * @param typeHandler 字符串
         */
        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        /**
         * Criterion构造方法
         * 继承父类
         * @param condition 字符串
         * @param value object对象
         * @param secondValue object对象
         */
        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}