package com.yizu.proj.sys.beans.gen;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

/**
 * This class was generated by MyBatis Generator.
 * This class corresponds to the database table************** circleinfo
 */
/**
 * This class was generated by MyBatis Generator.
 * This class corresponds to the database table************** circleinfo
 */
/**
 * This class was generated by MyBatis Generator.
 * This class corresponds to the database table************** circleinfo
 */
public class CircleInfoExampleBase {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table circleinfo
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table circleinfo
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table circleinfo
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table circleinfo
     *
     * @mbggenerated
     */
    protected int limitStart = -1;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table circleinfo
     *
     * @mbggenerated
     */
    protected int rowsPerPage = -1;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table circleinfo
     *
     *
     *
     * @mbggenerated
     */
    public CircleInfoExampleBase() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table circleinfo
     *
     * @param orderByClause String
     *
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table circleinfo
     *
     *
     * @return the value of java.lang.String
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table circleinfo
     *
     * @param distinct boolean
     *
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table circleinfo
     *
     *
     * @return the value of boolean
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table circleinfo
     *
     *
     * @return the value of java.util.List<Criteria>
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table circleinfo
     *
     * @param criteria Criteria
     *
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table circleinfo
     *
     *
     * @return the value of Criteria
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table circleinfo
     *
     *
     * @return the value of Criteria
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table circleinfo
     *
     *
     * @return the value of Criteria
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table circleinfo
     *
     *
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table circleinfo
     *
     * @param limitStart int
     *
     *
     * @mbggenerated
     */
    public void setLimitStart(int limitStart) {
        this.limitStart=limitStart;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table circleinfo
     *
     *
     * @return the value of int
     *
     * @mbggenerated
     */
    public int getLimitStart() {
        return limitStart;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table circleinfo
     *
     * @param rowsPerPage int
     *
     *
     * @mbggenerated
     */
    public void setRowsPerPage(int rowsPerPage) {
        this.rowsPerPage=rowsPerPage;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table circleinfo
     *
     *
     * @return the value of int
     *
     * @mbggenerated
     */
    public int getRowsPerPage() {
        return rowsPerPage;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table 
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        /**
         * criteria
         */
        protected List<Criterion> criteria;

        /**
         * 构造方法
         */
        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        /**
         * isValid 方法
         *
         * @return boolean
         */
        public boolean isValid() {
            return criteria.size() > 0;
        }

        /**
         * getAllCriteria方法
         * @return criteria
         */
        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        /**
         * getCriteria方法
         * @return criteria
         */
        public List<Criterion> getCriteria() {
            return criteria;
        }

        /**
         * addCriterion方法
         * @param condition 字符串
         */
        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        /**
         * addCriterion方法
         * @param condition 字符串
         * @param value Object对象
         * @param property 字符串
         */
        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        /**
         * addCriterion方法
         * @param condition 字符串
         * @param value1 Object对象
         * @param value2 Object对象
         * @param property 字符串
         */
        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        /**
         *addCriterion("circleId is null");
         * @return Criteria this
         */
        public Criteria andCircleidIsNull() {
            addCriterion("circleId is null");
            return (Criteria) this;
        }

        /**
         *addCriterion("circleId is not null");
         * @return Criteria this
         */
        public Criteria andCircleidIsNotNull() {
            addCriterion("circleId is not null");
            return (Criteria) this;
        }

        /**
         *andCircleidEqualTo
         * @param value circleid
         * @return Criteria this
         */
        public Criteria andCircleidEqualTo(String value) {
            addCriterion("circleId =", value, "circleid");
            return (Criteria) this;
        }

        /**
         *andCircleidNotEqualTo
         * @param value circleid
         * @return Criteria this
         */
        public Criteria andCircleidNotEqualTo(String value) {
            addCriterion("circleId <>", value, "circleid");
            return (Criteria) this;
        }

        /**
         *andCircleidGreaterThan
         * @param value circleid
         * @return Criteria this
         */
        public Criteria andCircleidGreaterThan(String value) {
            addCriterion("circleId >", value, "circleid");
            return (Criteria) this;
        }

        /**
         *andCircleidGreaterThanOrEqualTo
         * @param value circleid
         * @return Criteria this
         */
        public Criteria andCircleidGreaterThanOrEqualTo(String value) {
            addCriterion("circleId >=", value, "circleid");
            return (Criteria) this;
        }

        /**
         *andCircleidLessThan
         * @param value circleid
         * @return Criteria this
         */
        public Criteria andCircleidLessThan(String value) {
            addCriterion("circleId <", value, "circleid");
            return (Criteria) this;
        }

        /**
         *andCircleidLessThanOrEqualTo
         * @param value circleid
         * @return Criteria this
         */
        public Criteria andCircleidLessThanOrEqualTo(String value) {
            addCriterion("circleId <=", value, "circleid");
            return (Criteria) this;
        }

        /**
         *andCircleidLike
         * @param value circleid
         * @return Criteria this
         */
        public Criteria andCircleidLike(String value) {
            addCriterion("circleId like", value, "circleid");
            return (Criteria) this;
        }

        /**
         *andCircleidNotLike
         * @param value circleid
         * @return Criteria this
         */
        public Criteria andCircleidNotLike(String value) {
            addCriterion("circleId not like", value, "circleid");
            return (Criteria) this;
        }

        /**
         *andCircleidIn
         * @param values
         * @return Criteria this
         */
        public Criteria andCircleidIn(List<String> values) {
            addCriterion("circleId in", values, "circleid");
            return (Criteria) this;
        }

        /**
         *andCircleidNotIn
         * @param values
         * @return Criteria this
         */
        public Criteria andCircleidNotIn(List<String> values) {
            addCriterion("circleId not in", values, "circleid");
            return (Criteria) this;
        }

        /**
         *andCircleidBetween
         * @param value1
         * @param value2
         * @return Criteria this
         */
        public Criteria andCircleidBetween(String value1, String value2) {
            addCriterion("circleId between", value1, value2, "circleid");
            return (Criteria) this;
        }

        /**
         *andCircleidNotBetween
         * @param value1
         * @param value2
         * @return Criteria this
         */
        public Criteria andCircleidNotBetween(String value1, String value2) {
            addCriterion("circleId not between", value1, value2, "circleid");
            return (Criteria) this;
        }

        /**
         *addCriterion("circleName is null");
         * @return Criteria this
         */
        public Criteria andCirclenameIsNull() {
            addCriterion("circleName is null");
            return (Criteria) this;
        }

        /**
         *addCriterion("circleName is not null");
         * @return Criteria this
         */
        public Criteria andCirclenameIsNotNull() {
            addCriterion("circleName is not null");
            return (Criteria) this;
        }

        /**
         *andCirclenameEqualTo
         * @param value circlename
         * @return Criteria this
         */
        public Criteria andCirclenameEqualTo(String value) {
            addCriterion("circleName =", value, "circlename");
            return (Criteria) this;
        }

        /**
         *andCirclenameNotEqualTo
         * @param value circlename
         * @return Criteria this
         */
        public Criteria andCirclenameNotEqualTo(String value) {
            addCriterion("circleName <>", value, "circlename");
            return (Criteria) this;
        }

        /**
         *andCirclenameGreaterThan
         * @param value circlename
         * @return Criteria this
         */
        public Criteria andCirclenameGreaterThan(String value) {
            addCriterion("circleName >", value, "circlename");
            return (Criteria) this;
        }

        /**
         *andCirclenameGreaterThanOrEqualTo
         * @param value circlename
         * @return Criteria this
         */
        public Criteria andCirclenameGreaterThanOrEqualTo(String value) {
            addCriterion("circleName >=", value, "circlename");
            return (Criteria) this;
        }

        /**
         *andCirclenameLessThan
         * @param value circlename
         * @return Criteria this
         */
        public Criteria andCirclenameLessThan(String value) {
            addCriterion("circleName <", value, "circlename");
            return (Criteria) this;
        }

        /**
         *andCirclenameLessThanOrEqualTo
         * @param value circlename
         * @return Criteria this
         */
        public Criteria andCirclenameLessThanOrEqualTo(String value) {
            addCriterion("circleName <=", value, "circlename");
            return (Criteria) this;
        }

        /**
         *andCirclenameLike
         * @param value circlename
         * @return Criteria this
         */
        public Criteria andCirclenameLike(String value) {
            addCriterion("circleName like", value, "circlename");
            return (Criteria) this;
        }

        /**
         *andCirclenameNotLike
         * @param value circlename
         * @return Criteria this
         */
        public Criteria andCirclenameNotLike(String value) {
            addCriterion("circleName not like", value, "circlename");
            return (Criteria) this;
        }

        /**
         *andCirclenameIn
         * @param values
         * @return Criteria this
         */
        public Criteria andCirclenameIn(List<String> values) {
            addCriterion("circleName in", values, "circlename");
            return (Criteria) this;
        }

        /**
         *andCirclenameNotIn
         * @param values
         * @return Criteria this
         */
        public Criteria andCirclenameNotIn(List<String> values) {
            addCriterion("circleName not in", values, "circlename");
            return (Criteria) this;
        }

        /**
         *andCirclenameBetween
         * @param value1
         * @param value2
         * @return Criteria this
         */
        public Criteria andCirclenameBetween(String value1, String value2) {
            addCriterion("circleName between", value1, value2, "circlename");
            return (Criteria) this;
        }

        /**
         *andCirclenameNotBetween
         * @param value1
         * @param value2
         * @return Criteria this
         */
        public Criteria andCirclenameNotBetween(String value1, String value2) {
            addCriterion("circleName not between", value1, value2, "circlename");
            return (Criteria) this;
        }

        /**
         *addCriterion("createDateTime is null");
         * @return Criteria this
         */
        public Criteria andCreatedatetimeIsNull() {
            addCriterion("createDateTime is null");
            return (Criteria) this;
        }

        /**
         *addCriterion("createDateTime is not null");
         * @return Criteria this
         */
        public Criteria andCreatedatetimeIsNotNull() {
            addCriterion("createDateTime is not null");
            return (Criteria) this;
        }

        /**
         *andCreatedatetimeEqualTo
         * @param value createdatetime
         * @return Criteria this
         */
        public Criteria andCreatedatetimeEqualTo(Date value) {
            addCriterion("createDateTime =", value, "createdatetime");
            return (Criteria) this;
        }

        /**
         *andCreatedatetimeNotEqualTo
         * @param value createdatetime
         * @return Criteria this
         */
        public Criteria andCreatedatetimeNotEqualTo(Date value) {
            addCriterion("createDateTime <>", value, "createdatetime");
            return (Criteria) this;
        }

        /**
         *andCreatedatetimeGreaterThan
         * @param value createdatetime
         * @return Criteria this
         */
        public Criteria andCreatedatetimeGreaterThan(Date value) {
            addCriterion("createDateTime >", value, "createdatetime");
            return (Criteria) this;
        }

        /**
         *andCreatedatetimeGreaterThanOrEqualTo
         * @param value createdatetime
         * @return Criteria this
         */
        public Criteria andCreatedatetimeGreaterThanOrEqualTo(Date value) {
            addCriterion("createDateTime >=", value, "createdatetime");
            return (Criteria) this;
        }

        /**
         *andCreatedatetimeLessThan
         * @param value createdatetime
         * @return Criteria this
         */
        public Criteria andCreatedatetimeLessThan(Date value) {
            addCriterion("createDateTime <", value, "createdatetime");
            return (Criteria) this;
        }

        /**
         *andCreatedatetimeLessThanOrEqualTo
         * @param value createdatetime
         * @return Criteria this
         */
        public Criteria andCreatedatetimeLessThanOrEqualTo(Date value) {
            addCriterion("createDateTime <=", value, "createdatetime");
            return (Criteria) this;
        }

        /**
         *andCreatedatetimeIn
         * @param values
         * @return Criteria this
         */
        public Criteria andCreatedatetimeIn(List<Date> values) {
            addCriterion("createDateTime in", values, "createdatetime");
            return (Criteria) this;
        }

        /**
         *andCreatedatetimeNotIn
         * @param values
         * @return Criteria this
         */
        public Criteria andCreatedatetimeNotIn(List<Date> values) {
            addCriterion("createDateTime not in", values, "createdatetime");
            return (Criteria) this;
        }

        /**
         *andCreatedatetimeBetween
         * @param value1
         * @param value2
         * @return Criteria this
         */
        public Criteria andCreatedatetimeBetween(Date value1, Date value2) {
            addCriterion("createDateTime between", value1, value2, "createdatetime");
            return (Criteria) this;
        }

        /**
         *andCreatedatetimeNotBetween
         * @param value1
         * @param value2
         * @return Criteria this
         */
        public Criteria andCreatedatetimeNotBetween(Date value1, Date value2) {
            addCriterion("createDateTime not between", value1, value2, "createdatetime");
            return (Criteria) this;
        }

        /**
         *addCriterion("updateDateTime is null");
         * @return Criteria this
         */
        public Criteria andUpdatedatetimeIsNull() {
            addCriterion("updateDateTime is null");
            return (Criteria) this;
        }

        /**
         *addCriterion("updateDateTime is not null");
         * @return Criteria this
         */
        public Criteria andUpdatedatetimeIsNotNull() {
            addCriterion("updateDateTime is not null");
            return (Criteria) this;
        }

        /**
         *andUpdatedatetimeEqualTo
         * @param value updatedatetime
         * @return Criteria this
         */
        public Criteria andUpdatedatetimeEqualTo(Date value) {
            addCriterion("updateDateTime =", value, "updatedatetime");
            return (Criteria) this;
        }

        /**
         *andUpdatedatetimeNotEqualTo
         * @param value updatedatetime
         * @return Criteria this
         */
        public Criteria andUpdatedatetimeNotEqualTo(Date value) {
            addCriterion("updateDateTime <>", value, "updatedatetime");
            return (Criteria) this;
        }

        /**
         *andUpdatedatetimeGreaterThan
         * @param value updatedatetime
         * @return Criteria this
         */
        public Criteria andUpdatedatetimeGreaterThan(Date value) {
            addCriterion("updateDateTime >", value, "updatedatetime");
            return (Criteria) this;
        }

        /**
         *andUpdatedatetimeGreaterThanOrEqualTo
         * @param value updatedatetime
         * @return Criteria this
         */
        public Criteria andUpdatedatetimeGreaterThanOrEqualTo(Date value) {
            addCriterion("updateDateTime >=", value, "updatedatetime");
            return (Criteria) this;
        }

        /**
         *andUpdatedatetimeLessThan
         * @param value updatedatetime
         * @return Criteria this
         */
        public Criteria andUpdatedatetimeLessThan(Date value) {
            addCriterion("updateDateTime <", value, "updatedatetime");
            return (Criteria) this;
        }

        /**
         *andUpdatedatetimeLessThanOrEqualTo
         * @param value updatedatetime
         * @return Criteria this
         */
        public Criteria andUpdatedatetimeLessThanOrEqualTo(Date value) {
            addCriterion("updateDateTime <=", value, "updatedatetime");
            return (Criteria) this;
        }

        /**
         *andUpdatedatetimeIn
         * @param values
         * @return Criteria this
         */
        public Criteria andUpdatedatetimeIn(List<Date> values) {
            addCriterion("updateDateTime in", values, "updatedatetime");
            return (Criteria) this;
        }

        /**
         *andUpdatedatetimeNotIn
         * @param values
         * @return Criteria this
         */
        public Criteria andUpdatedatetimeNotIn(List<Date> values) {
            addCriterion("updateDateTime not in", values, "updatedatetime");
            return (Criteria) this;
        }

        /**
         *andUpdatedatetimeBetween
         * @param value1
         * @param value2
         * @return Criteria this
         */
        public Criteria andUpdatedatetimeBetween(Date value1, Date value2) {
            addCriterion("updateDateTime between", value1, value2, "updatedatetime");
            return (Criteria) this;
        }

        /**
         *andUpdatedatetimeNotBetween
         * @param value1
         * @param value2
         * @return Criteria this
         */
        public Criteria andUpdatedatetimeNotBetween(Date value1, Date value2) {
            addCriterion("updateDateTime not between", value1, value2, "updatedatetime");
            return (Criteria) this;
        }

        /**
         *addCriterion("userId is null");
         * @return Criteria this
         */
        public Criteria andUseridIsNull() {
            addCriterion("userId is null");
            return (Criteria) this;
        }

        /**
         *addCriterion("userId is not null");
         * @return Criteria this
         */
        public Criteria andUseridIsNotNull() {
            addCriterion("userId is not null");
            return (Criteria) this;
        }

        /**
         *andUseridEqualTo
         * @param value userid
         * @return Criteria this
         */
        public Criteria andUseridEqualTo(Integer value) {
            addCriterion("userId =", value, "userid");
            return (Criteria) this;
        }

        /**
         *andUseridNotEqualTo
         * @param value userid
         * @return Criteria this
         */
        public Criteria andUseridNotEqualTo(Integer value) {
            addCriterion("userId <>", value, "userid");
            return (Criteria) this;
        }

        /**
         *andUseridGreaterThan
         * @param value userid
         * @return Criteria this
         */
        public Criteria andUseridGreaterThan(Integer value) {
            addCriterion("userId >", value, "userid");
            return (Criteria) this;
        }

        /**
         *andUseridGreaterThanOrEqualTo
         * @param value userid
         * @return Criteria this
         */
        public Criteria andUseridGreaterThanOrEqualTo(Integer value) {
            addCriterion("userId >=", value, "userid");
            return (Criteria) this;
        }

        /**
         *andUseridLessThan
         * @param value userid
         * @return Criteria this
         */
        public Criteria andUseridLessThan(Integer value) {
            addCriterion("userId <", value, "userid");
            return (Criteria) this;
        }

        /**
         *andUseridLessThanOrEqualTo
         * @param value userid
         * @return Criteria this
         */
        public Criteria andUseridLessThanOrEqualTo(Integer value) {
            addCriterion("userId <=", value, "userid");
            return (Criteria) this;
        }

        /**
         *andUseridIn
         * @param values
         * @return Criteria this
         */
        public Criteria andUseridIn(List<Integer> values) {
            addCriterion("userId in", values, "userid");
            return (Criteria) this;
        }

        /**
         *andUseridNotIn
         * @param values
         * @return Criteria this
         */
        public Criteria andUseridNotIn(List<Integer> values) {
            addCriterion("userId not in", values, "userid");
            return (Criteria) this;
        }

        /**
         *andUseridBetween
         * @param value1
         * @param value2
         * @return Criteria this
         */
        public Criteria andUseridBetween(Integer value1, Integer value2) {
            addCriterion("userId between", value1, value2, "userid");
            return (Criteria) this;
        }

        /**
         *andUseridNotBetween
         * @param value1
         * @param value2
         * @return Criteria this
         */
        public Criteria andUseridNotBetween(Integer value1, Integer value2) {
            addCriterion("userId not between", value1, value2, "userid");
            return (Criteria) this;
        }

        /**
         *addCriterion("summary is null");
         * @return Criteria this
         */
        public Criteria andSummaryIsNull() {
            addCriterion("summary is null");
            return (Criteria) this;
        }

        /**
         *addCriterion("summary is not null");
         * @return Criteria this
         */
        public Criteria andSummaryIsNotNull() {
            addCriterion("summary is not null");
            return (Criteria) this;
        }

        /**
         *andSummaryEqualTo
         * @param value summary
         * @return Criteria this
         */
        public Criteria andSummaryEqualTo(String value) {
            addCriterion("summary =", value, "summary");
            return (Criteria) this;
        }

        /**
         *andSummaryNotEqualTo
         * @param value summary
         * @return Criteria this
         */
        public Criteria andSummaryNotEqualTo(String value) {
            addCriterion("summary <>", value, "summary");
            return (Criteria) this;
        }

        /**
         *andSummaryGreaterThan
         * @param value summary
         * @return Criteria this
         */
        public Criteria andSummaryGreaterThan(String value) {
            addCriterion("summary >", value, "summary");
            return (Criteria) this;
        }

        /**
         *andSummaryGreaterThanOrEqualTo
         * @param value summary
         * @return Criteria this
         */
        public Criteria andSummaryGreaterThanOrEqualTo(String value) {
            addCriterion("summary >=", value, "summary");
            return (Criteria) this;
        }

        /**
         *andSummaryLessThan
         * @param value summary
         * @return Criteria this
         */
        public Criteria andSummaryLessThan(String value) {
            addCriterion("summary <", value, "summary");
            return (Criteria) this;
        }

        /**
         *andSummaryLessThanOrEqualTo
         * @param value summary
         * @return Criteria this
         */
        public Criteria andSummaryLessThanOrEqualTo(String value) {
            addCriterion("summary <=", value, "summary");
            return (Criteria) this;
        }

        /**
         *andSummaryLike
         * @param value summary
         * @return Criteria this
         */
        public Criteria andSummaryLike(String value) {
            addCriterion("summary like", value, "summary");
            return (Criteria) this;
        }

        /**
         *andSummaryNotLike
         * @param value summary
         * @return Criteria this
         */
        public Criteria andSummaryNotLike(String value) {
            addCriterion("summary not like", value, "summary");
            return (Criteria) this;
        }

        /**
         *andSummaryIn
         * @param values
         * @return Criteria this
         */
        public Criteria andSummaryIn(List<String> values) {
            addCriterion("summary in", values, "summary");
            return (Criteria) this;
        }

        /**
         *andSummaryNotIn
         * @param values
         * @return Criteria this
         */
        public Criteria andSummaryNotIn(List<String> values) {
            addCriterion("summary not in", values, "summary");
            return (Criteria) this;
        }

        /**
         *andSummaryBetween
         * @param value1
         * @param value2
         * @return Criteria this
         */
        public Criteria andSummaryBetween(String value1, String value2) {
            addCriterion("summary between", value1, value2, "summary");
            return (Criteria) this;
        }

        /**
         *andSummaryNotBetween
         * @param value1
         * @param value2
         * @return Criteria this
         */
        public Criteria andSummaryNotBetween(String value1, String value2) {
            addCriterion("summary not between", value1, value2, "summary");
            return (Criteria) this;
        }

        /**
         *addCriterion("circleTag is null");
         * @return Criteria this
         */
        public Criteria andCircletagIsNull() {
            addCriterion("circleTag is null");
            return (Criteria) this;
        }

        /**
         *addCriterion("circleTag is not null");
         * @return Criteria this
         */
        public Criteria andCircletagIsNotNull() {
            addCriterion("circleTag is not null");
            return (Criteria) this;
        }

        /**
         *andCircletagEqualTo
         * @param value circletag
         * @return Criteria this
         */
        public Criteria andCircletagEqualTo(String value) {
            addCriterion("circleTag =", value, "circletag");
            return (Criteria) this;
        }

        /**
         *andCircletagNotEqualTo
         * @param value circletag
         * @return Criteria this
         */
        public Criteria andCircletagNotEqualTo(String value) {
            addCriterion("circleTag <>", value, "circletag");
            return (Criteria) this;
        }

        /**
         *andCircletagGreaterThan
         * @param value circletag
         * @return Criteria this
         */
        public Criteria andCircletagGreaterThan(String value) {
            addCriterion("circleTag >", value, "circletag");
            return (Criteria) this;
        }

        /**
         *andCircletagGreaterThanOrEqualTo
         * @param value circletag
         * @return Criteria this
         */
        public Criteria andCircletagGreaterThanOrEqualTo(String value) {
            addCriterion("circleTag >=", value, "circletag");
            return (Criteria) this;
        }

        /**
         *andCircletagLessThan
         * @param value circletag
         * @return Criteria this
         */
        public Criteria andCircletagLessThan(String value) {
            addCriterion("circleTag <", value, "circletag");
            return (Criteria) this;
        }

        /**
         *andCircletagLessThanOrEqualTo
         * @param value circletag
         * @return Criteria this
         */
        public Criteria andCircletagLessThanOrEqualTo(String value) {
            addCriterion("circleTag <=", value, "circletag");
            return (Criteria) this;
        }

        /**
         *andCircletagLike
         * @param value circletag
         * @return Criteria this
         */
        public Criteria andCircletagLike(String value) {
            addCriterion("circleTag like", value, "circletag");
            return (Criteria) this;
        }

        /**
         *andCircletagNotLike
         * @param value circletag
         * @return Criteria this
         */
        public Criteria andCircletagNotLike(String value) {
            addCriterion("circleTag not like", value, "circletag");
            return (Criteria) this;
        }

        /**
         *andCircletagIn
         * @param values
         * @return Criteria this
         */
        public Criteria andCircletagIn(List<String> values) {
            addCriterion("circleTag in", values, "circletag");
            return (Criteria) this;
        }

        /**
         *andCircletagNotIn
         * @param values
         * @return Criteria this
         */
        public Criteria andCircletagNotIn(List<String> values) {
            addCriterion("circleTag not in", values, "circletag");
            return (Criteria) this;
        }

        /**
         *andCircletagBetween
         * @param value1
         * @param value2
         * @return Criteria this
         */
        public Criteria andCircletagBetween(String value1, String value2) {
            addCriterion("circleTag between", value1, value2, "circletag");
            return (Criteria) this;
        }

        /**
         *andCircletagNotBetween
         * @param value1
         * @param value2
         * @return Criteria this
         */
        public Criteria andCircletagNotBetween(String value1, String value2) {
            addCriterion("circleTag not between", value1, value2, "circletag");
            return (Criteria) this;
        }

        /**
         *addCriterion("circleBigImg is null");
         * @return Criteria this
         */
        public Criteria andCirclebigimgIsNull() {
            addCriterion("circleBigImg is null");
            return (Criteria) this;
        }

        /**
         *addCriterion("circleBigImg is not null");
         * @return Criteria this
         */
        public Criteria andCirclebigimgIsNotNull() {
            addCriterion("circleBigImg is not null");
            return (Criteria) this;
        }

        /**
         *andCirclebigimgEqualTo
         * @param value circlebigimg
         * @return Criteria this
         */
        public Criteria andCirclebigimgEqualTo(String value) {
            addCriterion("circleBigImg =", value, "circlebigimg");
            return (Criteria) this;
        }

        /**
         *andCirclebigimgNotEqualTo
         * @param value circlebigimg
         * @return Criteria this
         */
        public Criteria andCirclebigimgNotEqualTo(String value) {
            addCriterion("circleBigImg <>", value, "circlebigimg");
            return (Criteria) this;
        }

        /**
         *andCirclebigimgGreaterThan
         * @param value circlebigimg
         * @return Criteria this
         */
        public Criteria andCirclebigimgGreaterThan(String value) {
            addCriterion("circleBigImg >", value, "circlebigimg");
            return (Criteria) this;
        }

        /**
         *andCirclebigimgGreaterThanOrEqualTo
         * @param value circlebigimg
         * @return Criteria this
         */
        public Criteria andCirclebigimgGreaterThanOrEqualTo(String value) {
            addCriterion("circleBigImg >=", value, "circlebigimg");
            return (Criteria) this;
        }

        /**
         *andCirclebigimgLessThan
         * @param value circlebigimg
         * @return Criteria this
         */
        public Criteria andCirclebigimgLessThan(String value) {
            addCriterion("circleBigImg <", value, "circlebigimg");
            return (Criteria) this;
        }

        /**
         *andCirclebigimgLessThanOrEqualTo
         * @param value circlebigimg
         * @return Criteria this
         */
        public Criteria andCirclebigimgLessThanOrEqualTo(String value) {
            addCriterion("circleBigImg <=", value, "circlebigimg");
            return (Criteria) this;
        }

        /**
         *andCirclebigimgLike
         * @param value circlebigimg
         * @return Criteria this
         */
        public Criteria andCirclebigimgLike(String value) {
            addCriterion("circleBigImg like", value, "circlebigimg");
            return (Criteria) this;
        }

        /**
         *andCirclebigimgNotLike
         * @param value circlebigimg
         * @return Criteria this
         */
        public Criteria andCirclebigimgNotLike(String value) {
            addCriterion("circleBigImg not like", value, "circlebigimg");
            return (Criteria) this;
        }

        /**
         *andCirclebigimgIn
         * @param values
         * @return Criteria this
         */
        public Criteria andCirclebigimgIn(List<String> values) {
            addCriterion("circleBigImg in", values, "circlebigimg");
            return (Criteria) this;
        }

        /**
         *andCirclebigimgNotIn
         * @param values
         * @return Criteria this
         */
        public Criteria andCirclebigimgNotIn(List<String> values) {
            addCriterion("circleBigImg not in", values, "circlebigimg");
            return (Criteria) this;
        }

        /**
         *andCirclebigimgBetween
         * @param value1
         * @param value2
         * @return Criteria this
         */
        public Criteria andCirclebigimgBetween(String value1, String value2) {
            addCriterion("circleBigImg between", value1, value2, "circlebigimg");
            return (Criteria) this;
        }

        /**
         *andCirclebigimgNotBetween
         * @param value1
         * @param value2
         * @return Criteria this
         */
        public Criteria andCirclebigimgNotBetween(String value1, String value2) {
            addCriterion("circleBigImg not between", value1, value2, "circlebigimg");
            return (Criteria) this;
        }

        /**
         *addCriterion("circleMiddleImg is null");
         * @return Criteria this
         */
        public Criteria andCirclemiddleimgIsNull() {
            addCriterion("circleMiddleImg is null");
            return (Criteria) this;
        }

        /**
         *addCriterion("circleMiddleImg is not null");
         * @return Criteria this
         */
        public Criteria andCirclemiddleimgIsNotNull() {
            addCriterion("circleMiddleImg is not null");
            return (Criteria) this;
        }

        /**
         *andCirclemiddleimgEqualTo
         * @param value circlemiddleimg
         * @return Criteria this
         */
        public Criteria andCirclemiddleimgEqualTo(String value) {
            addCriterion("circleMiddleImg =", value, "circlemiddleimg");
            return (Criteria) this;
        }

        /**
         *andCirclemiddleimgNotEqualTo
         * @param value circlemiddleimg
         * @return Criteria this
         */
        public Criteria andCirclemiddleimgNotEqualTo(String value) {
            addCriterion("circleMiddleImg <>", value, "circlemiddleimg");
            return (Criteria) this;
        }

        /**
         *andCirclemiddleimgGreaterThan
         * @param value circlemiddleimg
         * @return Criteria this
         */
        public Criteria andCirclemiddleimgGreaterThan(String value) {
            addCriterion("circleMiddleImg >", value, "circlemiddleimg");
            return (Criteria) this;
        }

        /**
         *andCirclemiddleimgGreaterThanOrEqualTo
         * @param value circlemiddleimg
         * @return Criteria this
         */
        public Criteria andCirclemiddleimgGreaterThanOrEqualTo(String value) {
            addCriterion("circleMiddleImg >=", value, "circlemiddleimg");
            return (Criteria) this;
        }

        /**
         *andCirclemiddleimgLessThan
         * @param value circlemiddleimg
         * @return Criteria this
         */
        public Criteria andCirclemiddleimgLessThan(String value) {
            addCriterion("circleMiddleImg <", value, "circlemiddleimg");
            return (Criteria) this;
        }

        /**
         *andCirclemiddleimgLessThanOrEqualTo
         * @param value circlemiddleimg
         * @return Criteria this
         */
        public Criteria andCirclemiddleimgLessThanOrEqualTo(String value) {
            addCriterion("circleMiddleImg <=", value, "circlemiddleimg");
            return (Criteria) this;
        }

        /**
         *andCirclemiddleimgLike
         * @param value circlemiddleimg
         * @return Criteria this
         */
        public Criteria andCirclemiddleimgLike(String value) {
            addCriterion("circleMiddleImg like", value, "circlemiddleimg");
            return (Criteria) this;
        }

        /**
         *andCirclemiddleimgNotLike
         * @param value circlemiddleimg
         * @return Criteria this
         */
        public Criteria andCirclemiddleimgNotLike(String value) {
            addCriterion("circleMiddleImg not like", value, "circlemiddleimg");
            return (Criteria) this;
        }

        /**
         *andCirclemiddleimgIn
         * @param values
         * @return Criteria this
         */
        public Criteria andCirclemiddleimgIn(List<String> values) {
            addCriterion("circleMiddleImg in", values, "circlemiddleimg");
            return (Criteria) this;
        }

        /**
         *andCirclemiddleimgNotIn
         * @param values
         * @return Criteria this
         */
        public Criteria andCirclemiddleimgNotIn(List<String> values) {
            addCriterion("circleMiddleImg not in", values, "circlemiddleimg");
            return (Criteria) this;
        }

        /**
         *andCirclemiddleimgBetween
         * @param value1
         * @param value2
         * @return Criteria this
         */
        public Criteria andCirclemiddleimgBetween(String value1, String value2) {
            addCriterion("circleMiddleImg between", value1, value2, "circlemiddleimg");
            return (Criteria) this;
        }

        /**
         *andCirclemiddleimgNotBetween
         * @param value1
         * @param value2
         * @return Criteria this
         */
        public Criteria andCirclemiddleimgNotBetween(String value1, String value2) {
            addCriterion("circleMiddleImg not between", value1, value2, "circlemiddleimg");
            return (Criteria) this;
        }

        /**
         *addCriterion("circleSmallImg is null");
         * @return Criteria this
         */
        public Criteria andCirclesmallimgIsNull() {
            addCriterion("circleSmallImg is null");
            return (Criteria) this;
        }

        /**
         *addCriterion("circleSmallImg is not null");
         * @return Criteria this
         */
        public Criteria andCirclesmallimgIsNotNull() {
            addCriterion("circleSmallImg is not null");
            return (Criteria) this;
        }

        /**
         *andCirclesmallimgEqualTo
         * @param value circlesmallimg
         * @return Criteria this
         */
        public Criteria andCirclesmallimgEqualTo(String value) {
            addCriterion("circleSmallImg =", value, "circlesmallimg");
            return (Criteria) this;
        }

        /**
         *andCirclesmallimgNotEqualTo
         * @param value circlesmallimg
         * @return Criteria this
         */
        public Criteria andCirclesmallimgNotEqualTo(String value) {
            addCriterion("circleSmallImg <>", value, "circlesmallimg");
            return (Criteria) this;
        }

        /**
         *andCirclesmallimgGreaterThan
         * @param value circlesmallimg
         * @return Criteria this
         */
        public Criteria andCirclesmallimgGreaterThan(String value) {
            addCriterion("circleSmallImg >", value, "circlesmallimg");
            return (Criteria) this;
        }

        /**
         *andCirclesmallimgGreaterThanOrEqualTo
         * @param value circlesmallimg
         * @return Criteria this
         */
        public Criteria andCirclesmallimgGreaterThanOrEqualTo(String value) {
            addCriterion("circleSmallImg >=", value, "circlesmallimg");
            return (Criteria) this;
        }

        /**
         *andCirclesmallimgLessThan
         * @param value circlesmallimg
         * @return Criteria this
         */
        public Criteria andCirclesmallimgLessThan(String value) {
            addCriterion("circleSmallImg <", value, "circlesmallimg");
            return (Criteria) this;
        }

        /**
         *andCirclesmallimgLessThanOrEqualTo
         * @param value circlesmallimg
         * @return Criteria this
         */
        public Criteria andCirclesmallimgLessThanOrEqualTo(String value) {
            addCriterion("circleSmallImg <=", value, "circlesmallimg");
            return (Criteria) this;
        }

        /**
         *andCirclesmallimgLike
         * @param value circlesmallimg
         * @return Criteria this
         */
        public Criteria andCirclesmallimgLike(String value) {
            addCriterion("circleSmallImg like", value, "circlesmallimg");
            return (Criteria) this;
        }

        /**
         *andCirclesmallimgNotLike
         * @param value circlesmallimg
         * @return Criteria this
         */
        public Criteria andCirclesmallimgNotLike(String value) {
            addCriterion("circleSmallImg not like", value, "circlesmallimg");
            return (Criteria) this;
        }

        /**
         *andCirclesmallimgIn
         * @param values
         * @return Criteria this
         */
        public Criteria andCirclesmallimgIn(List<String> values) {
            addCriterion("circleSmallImg in", values, "circlesmallimg");
            return (Criteria) this;
        }

        /**
         *andCirclesmallimgNotIn
         * @param values
         * @return Criteria this
         */
        public Criteria andCirclesmallimgNotIn(List<String> values) {
            addCriterion("circleSmallImg not in", values, "circlesmallimg");
            return (Criteria) this;
        }

        /**
         *andCirclesmallimgBetween
         * @param value1
         * @param value2
         * @return Criteria this
         */
        public Criteria andCirclesmallimgBetween(String value1, String value2) {
            addCriterion("circleSmallImg between", value1, value2, "circlesmallimg");
            return (Criteria) this;
        }

        /**
         *andCirclesmallimgNotBetween
         * @param value1
         * @param value2
         * @return Criteria this
         */
        public Criteria andCirclesmallimgNotBetween(String value1, String value2) {
            addCriterion("circleSmallImg not between", value1, value2, "circlesmallimg");
            return (Criteria) this;
        }

        /**
         *addCriterion("joinCount is null");
         * @return Criteria this
         */
        public Criteria andJoincountIsNull() {
            addCriterion("joinCount is null");
            return (Criteria) this;
        }

        /**
         *addCriterion("joinCount is not null");
         * @return Criteria this
         */
        public Criteria andJoincountIsNotNull() {
            addCriterion("joinCount is not null");
            return (Criteria) this;
        }

        /**
         *andJoincountEqualTo
         * @param value joincount
         * @return Criteria this
         */
        public Criteria andJoincountEqualTo(Integer value) {
            addCriterion("joinCount =", value, "joincount");
            return (Criteria) this;
        }

        /**
         *andJoincountNotEqualTo
         * @param value joincount
         * @return Criteria this
         */
        public Criteria andJoincountNotEqualTo(Integer value) {
            addCriterion("joinCount <>", value, "joincount");
            return (Criteria) this;
        }

        /**
         *andJoincountGreaterThan
         * @param value joincount
         * @return Criteria this
         */
        public Criteria andJoincountGreaterThan(Integer value) {
            addCriterion("joinCount >", value, "joincount");
            return (Criteria) this;
        }

        /**
         *andJoincountGreaterThanOrEqualTo
         * @param value joincount
         * @return Criteria this
         */
        public Criteria andJoincountGreaterThanOrEqualTo(Integer value) {
            addCriterion("joinCount >=", value, "joincount");
            return (Criteria) this;
        }

        /**
         *andJoincountLessThan
         * @param value joincount
         * @return Criteria this
         */
        public Criteria andJoincountLessThan(Integer value) {
            addCriterion("joinCount <", value, "joincount");
            return (Criteria) this;
        }

        /**
         *andJoincountLessThanOrEqualTo
         * @param value joincount
         * @return Criteria this
         */
        public Criteria andJoincountLessThanOrEqualTo(Integer value) {
            addCriterion("joinCount <=", value, "joincount");
            return (Criteria) this;
        }

        /**
         *andJoincountIn
         * @param values
         * @return Criteria this
         */
        public Criteria andJoincountIn(List<Integer> values) {
            addCriterion("joinCount in", values, "joincount");
            return (Criteria) this;
        }

        /**
         *andJoincountNotIn
         * @param values
         * @return Criteria this
         */
        public Criteria andJoincountNotIn(List<Integer> values) {
            addCriterion("joinCount not in", values, "joincount");
            return (Criteria) this;
        }

        /**
         *andJoincountBetween
         * @param value1
         * @param value2
         * @return Criteria this
         */
        public Criteria andJoincountBetween(Integer value1, Integer value2) {
            addCriterion("joinCount between", value1, value2, "joincount");
            return (Criteria) this;
        }

        /**
         *andJoincountNotBetween
         * @param value1
         * @param value2
         * @return Criteria this
         */
        public Criteria andJoincountNotBetween(Integer value1, Integer value2) {
            addCriterion("joinCount not between", value1, value2, "joincount");
            return (Criteria) this;
        }

        /**
         *addCriterion("comCount is null");
         * @return Criteria this
         */
        public Criteria andComcountIsNull() {
            addCriterion("comCount is null");
            return (Criteria) this;
        }

        /**
         *addCriterion("comCount is not null");
         * @return Criteria this
         */
        public Criteria andComcountIsNotNull() {
            addCriterion("comCount is not null");
            return (Criteria) this;
        }

        /**
         *andComcountEqualTo
         * @param value comcount
         * @return Criteria this
         */
        public Criteria andComcountEqualTo(Integer value) {
            addCriterion("comCount =", value, "comcount");
            return (Criteria) this;
        }

        /**
         *andComcountNotEqualTo
         * @param value comcount
         * @return Criteria this
         */
        public Criteria andComcountNotEqualTo(Integer value) {
            addCriterion("comCount <>", value, "comcount");
            return (Criteria) this;
        }

        /**
         *andComcountGreaterThan
         * @param value comcount
         * @return Criteria this
         */
        public Criteria andComcountGreaterThan(Integer value) {
            addCriterion("comCount >", value, "comcount");
            return (Criteria) this;
        }

        /**
         *andComcountGreaterThanOrEqualTo
         * @param value comcount
         * @return Criteria this
         */
        public Criteria andComcountGreaterThanOrEqualTo(Integer value) {
            addCriterion("comCount >=", value, "comcount");
            return (Criteria) this;
        }

        /**
         *andComcountLessThan
         * @param value comcount
         * @return Criteria this
         */
        public Criteria andComcountLessThan(Integer value) {
            addCriterion("comCount <", value, "comcount");
            return (Criteria) this;
        }

        /**
         *andComcountLessThanOrEqualTo
         * @param value comcount
         * @return Criteria this
         */
        public Criteria andComcountLessThanOrEqualTo(Integer value) {
            addCriterion("comCount <=", value, "comcount");
            return (Criteria) this;
        }

        /**
         *andComcountIn
         * @param values
         * @return Criteria this
         */
        public Criteria andComcountIn(List<Integer> values) {
            addCriterion("comCount in", values, "comcount");
            return (Criteria) this;
        }

        /**
         *andComcountNotIn
         * @param values
         * @return Criteria this
         */
        public Criteria andComcountNotIn(List<Integer> values) {
            addCriterion("comCount not in", values, "comcount");
            return (Criteria) this;
        }

        /**
         *andComcountBetween
         * @param value1
         * @param value2
         * @return Criteria this
         */
        public Criteria andComcountBetween(Integer value1, Integer value2) {
            addCriterion("comCount between", value1, value2, "comcount");
            return (Criteria) this;
        }

        /**
         *andComcountNotBetween
         * @param value1
         * @param value2
         * @return Criteria this
         */
        public Criteria andComcountNotBetween(Integer value1, Integer value2) {
            addCriterion("comCount not between", value1, value2, "comcount");
            return (Criteria) this;
        }

        /**
         *addCriterion("visitCount is null");
         * @return Criteria this
         */
        public Criteria andVisitcountIsNull() {
            addCriterion("visitCount is null");
            return (Criteria) this;
        }

        /**
         *addCriterion("visitCount is not null");
         * @return Criteria this
         */
        public Criteria andVisitcountIsNotNull() {
            addCriterion("visitCount is not null");
            return (Criteria) this;
        }

        /**
         *andVisitcountEqualTo
         * @param value visitcount
         * @return Criteria this
         */
        public Criteria andVisitcountEqualTo(Integer value) {
            addCriterion("visitCount =", value, "visitcount");
            return (Criteria) this;
        }

        /**
         *andVisitcountNotEqualTo
         * @param value visitcount
         * @return Criteria this
         */
        public Criteria andVisitcountNotEqualTo(Integer value) {
            addCriterion("visitCount <>", value, "visitcount");
            return (Criteria) this;
        }

        /**
         *andVisitcountGreaterThan
         * @param value visitcount
         * @return Criteria this
         */
        public Criteria andVisitcountGreaterThan(Integer value) {
            addCriterion("visitCount >", value, "visitcount");
            return (Criteria) this;
        }

        /**
         *andVisitcountGreaterThanOrEqualTo
         * @param value visitcount
         * @return Criteria this
         */
        public Criteria andVisitcountGreaterThanOrEqualTo(Integer value) {
            addCriterion("visitCount >=", value, "visitcount");
            return (Criteria) this;
        }

        /**
         *andVisitcountLessThan
         * @param value visitcount
         * @return Criteria this
         */
        public Criteria andVisitcountLessThan(Integer value) {
            addCriterion("visitCount <", value, "visitcount");
            return (Criteria) this;
        }

        /**
         *andVisitcountLessThanOrEqualTo
         * @param value visitcount
         * @return Criteria this
         */
        public Criteria andVisitcountLessThanOrEqualTo(Integer value) {
            addCriterion("visitCount <=", value, "visitcount");
            return (Criteria) this;
        }

        /**
         *andVisitcountIn
         * @param values
         * @return Criteria this
         */
        public Criteria andVisitcountIn(List<Integer> values) {
            addCriterion("visitCount in", values, "visitcount");
            return (Criteria) this;
        }

        /**
         *andVisitcountNotIn
         * @param values
         * @return Criteria this
         */
        public Criteria andVisitcountNotIn(List<Integer> values) {
            addCriterion("visitCount not in", values, "visitcount");
            return (Criteria) this;
        }

        /**
         *andVisitcountBetween
         * @param value1
         * @param value2
         * @return Criteria this
         */
        public Criteria andVisitcountBetween(Integer value1, Integer value2) {
            addCriterion("visitCount between", value1, value2, "visitcount");
            return (Criteria) this;
        }

        /**
         *andVisitcountNotBetween
         * @param value1
         * @param value2
         * @return Criteria this
         */
        public Criteria andVisitcountNotBetween(Integer value1, Integer value2) {
            addCriterion("visitCount not between", value1, value2, "visitcount");
            return (Criteria) this;
        }

        /**
         *addCriterion("csort is null");
         * @return Criteria this
         */
        public Criteria andCsortIsNull() {
            addCriterion("csort is null");
            return (Criteria) this;
        }

        /**
         *addCriterion("csort is not null");
         * @return Criteria this
         */
        public Criteria andCsortIsNotNull() {
            addCriterion("csort is not null");
            return (Criteria) this;
        }

        /**
         *andCsortEqualTo
         * @param value csort
         * @return Criteria this
         */
        public Criteria andCsortEqualTo(Integer value) {
            addCriterion("csort =", value, "csort");
            return (Criteria) this;
        }

        /**
         *andCsortNotEqualTo
         * @param value csort
         * @return Criteria this
         */
        public Criteria andCsortNotEqualTo(Integer value) {
            addCriterion("csort <>", value, "csort");
            return (Criteria) this;
        }

        /**
         *andCsortGreaterThan
         * @param value csort
         * @return Criteria this
         */
        public Criteria andCsortGreaterThan(Integer value) {
            addCriterion("csort >", value, "csort");
            return (Criteria) this;
        }

        /**
         *andCsortGreaterThanOrEqualTo
         * @param value csort
         * @return Criteria this
         */
        public Criteria andCsortGreaterThanOrEqualTo(Integer value) {
            addCriterion("csort >=", value, "csort");
            return (Criteria) this;
        }

        /**
         *andCsortLessThan
         * @param value csort
         * @return Criteria this
         */
        public Criteria andCsortLessThan(Integer value) {
            addCriterion("csort <", value, "csort");
            return (Criteria) this;
        }

        /**
         *andCsortLessThanOrEqualTo
         * @param value csort
         * @return Criteria this
         */
        public Criteria andCsortLessThanOrEqualTo(Integer value) {
            addCriterion("csort <=", value, "csort");
            return (Criteria) this;
        }

        /**
         *andCsortIn
         * @param values
         * @return Criteria this
         */
        public Criteria andCsortIn(List<Integer> values) {
            addCriterion("csort in", values, "csort");
            return (Criteria) this;
        }

        /**
         *andCsortNotIn
         * @param values
         * @return Criteria this
         */
        public Criteria andCsortNotIn(List<Integer> values) {
            addCriterion("csort not in", values, "csort");
            return (Criteria) this;
        }

        /**
         *andCsortBetween
         * @param value1
         * @param value2
         * @return Criteria this
         */
        public Criteria andCsortBetween(Integer value1, Integer value2) {
            addCriterion("csort between", value1, value2, "csort");
            return (Criteria) this;
        }

        /**
         *andCsortNotBetween
         * @param value1
         * @param value2
         * @return Criteria this
         */
        public Criteria andCsortNotBetween(Integer value1, Integer value2) {
            addCriterion("csort not between", value1, value2, "csort");
            return (Criteria) this;
        }

        /**
         *addCriterion("isTop is null");
         * @return Criteria this
         */
        public Criteria andIstopIsNull() {
            addCriterion("isTop is null");
            return (Criteria) this;
        }

        /**
         *addCriterion("isTop is not null");
         * @return Criteria this
         */
        public Criteria andIstopIsNotNull() {
            addCriterion("isTop is not null");
            return (Criteria) this;
        }

        /**
         *andIstopEqualTo
         * @param value istop
         * @return Criteria this
         */
        public Criteria andIstopEqualTo(Integer value) {
            addCriterion("isTop =", value, "istop");
            return (Criteria) this;
        }

        /**
         *andIstopNotEqualTo
         * @param value istop
         * @return Criteria this
         */
        public Criteria andIstopNotEqualTo(Integer value) {
            addCriterion("isTop <>", value, "istop");
            return (Criteria) this;
        }

        /**
         *andIstopGreaterThan
         * @param value istop
         * @return Criteria this
         */
        public Criteria andIstopGreaterThan(Integer value) {
            addCriterion("isTop >", value, "istop");
            return (Criteria) this;
        }

        /**
         *andIstopGreaterThanOrEqualTo
         * @param value istop
         * @return Criteria this
         */
        public Criteria andIstopGreaterThanOrEqualTo(Integer value) {
            addCriterion("isTop >=", value, "istop");
            return (Criteria) this;
        }

        /**
         *andIstopLessThan
         * @param value istop
         * @return Criteria this
         */
        public Criteria andIstopLessThan(Integer value) {
            addCriterion("isTop <", value, "istop");
            return (Criteria) this;
        }

        /**
         *andIstopLessThanOrEqualTo
         * @param value istop
         * @return Criteria this
         */
        public Criteria andIstopLessThanOrEqualTo(Integer value) {
            addCriterion("isTop <=", value, "istop");
            return (Criteria) this;
        }

        /**
         *andIstopIn
         * @param values
         * @return Criteria this
         */
        public Criteria andIstopIn(List<Integer> values) {
            addCriterion("isTop in", values, "istop");
            return (Criteria) this;
        }

        /**
         *andIstopNotIn
         * @param values
         * @return Criteria this
         */
        public Criteria andIstopNotIn(List<Integer> values) {
            addCriterion("isTop not in", values, "istop");
            return (Criteria) this;
        }

        /**
         *andIstopBetween
         * @param value1
         * @param value2
         * @return Criteria this
         */
        public Criteria andIstopBetween(Integer value1, Integer value2) {
            addCriterion("isTop between", value1, value2, "istop");
            return (Criteria) this;
        }

        /**
         *andIstopNotBetween
         * @param value1
         * @param value2
         * @return Criteria this
         */
        public Criteria andIstopNotBetween(Integer value1, Integer value2) {
            addCriterion("isTop not between", value1, value2, "istop");
            return (Criteria) this;
        }

        /**
         *addCriterion("display is null");
         * @return Criteria this
         */
        public Criteria andDisplayIsNull() {
            addCriterion("display is null");
            return (Criteria) this;
        }

        /**
         *addCriterion("display is not null");
         * @return Criteria this
         */
        public Criteria andDisplayIsNotNull() {
            addCriterion("display is not null");
            return (Criteria) this;
        }

        /**
         *andDisplayEqualTo
         * @param value display
         * @return Criteria this
         */
        public Criteria andDisplayEqualTo(Integer value) {
            addCriterion("display =", value, "display");
            return (Criteria) this;
        }

        /**
         *andDisplayNotEqualTo
         * @param value display
         * @return Criteria this
         */
        public Criteria andDisplayNotEqualTo(Integer value) {
            addCriterion("display <>", value, "display");
            return (Criteria) this;
        }

        /**
         *andDisplayGreaterThan
         * @param value display
         * @return Criteria this
         */
        public Criteria andDisplayGreaterThan(Integer value) {
            addCriterion("display >", value, "display");
            return (Criteria) this;
        }

        /**
         *andDisplayGreaterThanOrEqualTo
         * @param value display
         * @return Criteria this
         */
        public Criteria andDisplayGreaterThanOrEqualTo(Integer value) {
            addCriterion("display >=", value, "display");
            return (Criteria) this;
        }

        /**
         *andDisplayLessThan
         * @param value display
         * @return Criteria this
         */
        public Criteria andDisplayLessThan(Integer value) {
            addCriterion("display <", value, "display");
            return (Criteria) this;
        }

        /**
         *andDisplayLessThanOrEqualTo
         * @param value display
         * @return Criteria this
         */
        public Criteria andDisplayLessThanOrEqualTo(Integer value) {
            addCriterion("display <=", value, "display");
            return (Criteria) this;
        }

        /**
         *andDisplayIn
         * @param values
         * @return Criteria this
         */
        public Criteria andDisplayIn(List<Integer> values) {
            addCriterion("display in", values, "display");
            return (Criteria) this;
        }

        /**
         *andDisplayNotIn
         * @param values
         * @return Criteria this
         */
        public Criteria andDisplayNotIn(List<Integer> values) {
            addCriterion("display not in", values, "display");
            return (Criteria) this;
        }

        /**
         *andDisplayBetween
         * @param value1
         * @param value2
         * @return Criteria this
         */
        public Criteria andDisplayBetween(Integer value1, Integer value2) {
            addCriterion("display between", value1, value2, "display");
            return (Criteria) this;
        }

        /**
         *andDisplayNotBetween
         * @param value1
         * @param value2
         * @return Criteria this
         */
        public Criteria andDisplayNotBetween(Integer value1, Integer value2) {
            addCriterion("display not between", value1, value2, "display");
            return (Criteria) this;
        }

        /**
         *addCriterion("def1 is null");
         * @return Criteria this
         */
        public Criteria andDef1IsNull() {
            addCriterion("def1 is null");
            return (Criteria) this;
        }

        /**
         *addCriterion("def1 is not null");
         * @return Criteria this
         */
        public Criteria andDef1IsNotNull() {
            addCriterion("def1 is not null");
            return (Criteria) this;
        }

        /**
         *andDef1EqualTo
         * @param value def1
         * @return Criteria this
         */
        public Criteria andDef1EqualTo(String value) {
            addCriterion("def1 =", value, "def1");
            return (Criteria) this;
        }

        /**
         *andDef1NotEqualTo
         * @param value def1
         * @return Criteria this
         */
        public Criteria andDef1NotEqualTo(String value) {
            addCriterion("def1 <>", value, "def1");
            return (Criteria) this;
        }

        /**
         *andDef1GreaterThan
         * @param value def1
         * @return Criteria this
         */
        public Criteria andDef1GreaterThan(String value) {
            addCriterion("def1 >", value, "def1");
            return (Criteria) this;
        }

        /**
         *andDef1GreaterThanOrEqualTo
         * @param value def1
         * @return Criteria this
         */
        public Criteria andDef1GreaterThanOrEqualTo(String value) {
            addCriterion("def1 >=", value, "def1");
            return (Criteria) this;
        }

        /**
         *andDef1LessThan
         * @param value def1
         * @return Criteria this
         */
        public Criteria andDef1LessThan(String value) {
            addCriterion("def1 <", value, "def1");
            return (Criteria) this;
        }

        /**
         *andDef1LessThanOrEqualTo
         * @param value def1
         * @return Criteria this
         */
        public Criteria andDef1LessThanOrEqualTo(String value) {
            addCriterion("def1 <=", value, "def1");
            return (Criteria) this;
        }

        /**
         *andDef1Like
         * @param value def1
         * @return Criteria this
         */
        public Criteria andDef1Like(String value) {
            addCriterion("def1 like", value, "def1");
            return (Criteria) this;
        }

        /**
         *andDef1NotLike
         * @param value def1
         * @return Criteria this
         */
        public Criteria andDef1NotLike(String value) {
            addCriterion("def1 not like", value, "def1");
            return (Criteria) this;
        }

        /**
         *andDef1In
         * @param values
         * @return Criteria this
         */
        public Criteria andDef1In(List<String> values) {
            addCriterion("def1 in", values, "def1");
            return (Criteria) this;
        }

        /**
         *andDef1NotIn
         * @param values
         * @return Criteria this
         */
        public Criteria andDef1NotIn(List<String> values) {
            addCriterion("def1 not in", values, "def1");
            return (Criteria) this;
        }

        /**
         *andDef1Between
         * @param value1
         * @param value2
         * @return Criteria this
         */
        public Criteria andDef1Between(String value1, String value2) {
            addCriterion("def1 between", value1, value2, "def1");
            return (Criteria) this;
        }

        /**
         *andDef1NotBetween
         * @param value1
         * @param value2
         * @return Criteria this
         */
        public Criteria andDef1NotBetween(String value1, String value2) {
            addCriterion("def1 not between", value1, value2, "def1");
            return (Criteria) this;
        }

        /**
         *addCriterion("def2 is null");
         * @return Criteria this
         */
        public Criteria andDef2IsNull() {
            addCriterion("def2 is null");
            return (Criteria) this;
        }

        /**
         *addCriterion("def2 is not null");
         * @return Criteria this
         */
        public Criteria andDef2IsNotNull() {
            addCriterion("def2 is not null");
            return (Criteria) this;
        }

        /**
         *andDef2EqualTo
         * @param value def2
         * @return Criteria this
         */
        public Criteria andDef2EqualTo(String value) {
            addCriterion("def2 =", value, "def2");
            return (Criteria) this;
        }

        /**
         *andDef2NotEqualTo
         * @param value def2
         * @return Criteria this
         */
        public Criteria andDef2NotEqualTo(String value) {
            addCriterion("def2 <>", value, "def2");
            return (Criteria) this;
        }

        /**
         *andDef2GreaterThan
         * @param value def2
         * @return Criteria this
         */
        public Criteria andDef2GreaterThan(String value) {
            addCriterion("def2 >", value, "def2");
            return (Criteria) this;
        }

        /**
         *andDef2GreaterThanOrEqualTo
         * @param value def2
         * @return Criteria this
         */
        public Criteria andDef2GreaterThanOrEqualTo(String value) {
            addCriterion("def2 >=", value, "def2");
            return (Criteria) this;
        }

        /**
         *andDef2LessThan
         * @param value def2
         * @return Criteria this
         */
        public Criteria andDef2LessThan(String value) {
            addCriterion("def2 <", value, "def2");
            return (Criteria) this;
        }

        /**
         *andDef2LessThanOrEqualTo
         * @param value def2
         * @return Criteria this
         */
        public Criteria andDef2LessThanOrEqualTo(String value) {
            addCriterion("def2 <=", value, "def2");
            return (Criteria) this;
        }

        /**
         *andDef2Like
         * @param value def2
         * @return Criteria this
         */
        public Criteria andDef2Like(String value) {
            addCriterion("def2 like", value, "def2");
            return (Criteria) this;
        }

        /**
         *andDef2NotLike
         * @param value def2
         * @return Criteria this
         */
        public Criteria andDef2NotLike(String value) {
            addCriterion("def2 not like", value, "def2");
            return (Criteria) this;
        }

        /**
         *andDef2In
         * @param values
         * @return Criteria this
         */
        public Criteria andDef2In(List<String> values) {
            addCriterion("def2 in", values, "def2");
            return (Criteria) this;
        }

        /**
         *andDef2NotIn
         * @param values
         * @return Criteria this
         */
        public Criteria andDef2NotIn(List<String> values) {
            addCriterion("def2 not in", values, "def2");
            return (Criteria) this;
        }

        /**
         *andDef2Between
         * @param value1
         * @param value2
         * @return Criteria this
         */
        public Criteria andDef2Between(String value1, String value2) {
            addCriterion("def2 between", value1, value2, "def2");
            return (Criteria) this;
        }

        /**
         *andDef2NotBetween
         * @param value1
         * @param value2
         * @return Criteria this
         */
        public Criteria andDef2NotBetween(String value1, String value2) {
            addCriterion("def2 not between", value1, value2, "def2");
            return (Criteria) this;
        }

        /**
         *addCriterion("def3 is null");
         * @return Criteria this
         */
        public Criteria andDef3IsNull() {
            addCriterion("def3 is null");
            return (Criteria) this;
        }

        /**
         *addCriterion("def3 is not null");
         * @return Criteria this
         */
        public Criteria andDef3IsNotNull() {
            addCriterion("def3 is not null");
            return (Criteria) this;
        }

        /**
         *andDef3EqualTo
         * @param value def3
         * @return Criteria this
         */
        public Criteria andDef3EqualTo(String value) {
            addCriterion("def3 =", value, "def3");
            return (Criteria) this;
        }

        /**
         *andDef3NotEqualTo
         * @param value def3
         * @return Criteria this
         */
        public Criteria andDef3NotEqualTo(String value) {
            addCriterion("def3 <>", value, "def3");
            return (Criteria) this;
        }

        /**
         *andDef3GreaterThan
         * @param value def3
         * @return Criteria this
         */
        public Criteria andDef3GreaterThan(String value) {
            addCriterion("def3 >", value, "def3");
            return (Criteria) this;
        }

        /**
         *andDef3GreaterThanOrEqualTo
         * @param value def3
         * @return Criteria this
         */
        public Criteria andDef3GreaterThanOrEqualTo(String value) {
            addCriterion("def3 >=", value, "def3");
            return (Criteria) this;
        }

        /**
         *andDef3LessThan
         * @param value def3
         * @return Criteria this
         */
        public Criteria andDef3LessThan(String value) {
            addCriterion("def3 <", value, "def3");
            return (Criteria) this;
        }

        /**
         *andDef3LessThanOrEqualTo
         * @param value def3
         * @return Criteria this
         */
        public Criteria andDef3LessThanOrEqualTo(String value) {
            addCriterion("def3 <=", value, "def3");
            return (Criteria) this;
        }

        /**
         *andDef3Like
         * @param value def3
         * @return Criteria this
         */
        public Criteria andDef3Like(String value) {
            addCriterion("def3 like", value, "def3");
            return (Criteria) this;
        }

        /**
         *andDef3NotLike
         * @param value def3
         * @return Criteria this
         */
        public Criteria andDef3NotLike(String value) {
            addCriterion("def3 not like", value, "def3");
            return (Criteria) this;
        }

        /**
         *andDef3In
         * @param values
         * @return Criteria this
         */
        public Criteria andDef3In(List<String> values) {
            addCriterion("def3 in", values, "def3");
            return (Criteria) this;
        }

        /**
         *andDef3NotIn
         * @param values
         * @return Criteria this
         */
        public Criteria andDef3NotIn(List<String> values) {
            addCriterion("def3 not in", values, "def3");
            return (Criteria) this;
        }

        /**
         *andDef3Between
         * @param value1
         * @param value2
         * @return Criteria this
         */
        public Criteria andDef3Between(String value1, String value2) {
            addCriterion("def3 between", value1, value2, "def3");
            return (Criteria) this;
        }

        /**
         *andDef3NotBetween
         * @param value1
         * @param value2
         * @return Criteria this
         */
        public Criteria andDef3NotBetween(String value1, String value2) {
            addCriterion("def3 not between", value1, value2, "def3");
            return (Criteria) this;
        }

        /**
         *addCriterion("def4 is null");
         * @return Criteria this
         */
        public Criteria andDef4IsNull() {
            addCriterion("def4 is null");
            return (Criteria) this;
        }

        /**
         *addCriterion("def4 is not null");
         * @return Criteria this
         */
        public Criteria andDef4IsNotNull() {
            addCriterion("def4 is not null");
            return (Criteria) this;
        }

        /**
         *andDef4EqualTo
         * @param value def4
         * @return Criteria this
         */
        public Criteria andDef4EqualTo(String value) {
            addCriterion("def4 =", value, "def4");
            return (Criteria) this;
        }

        /**
         *andDef4NotEqualTo
         * @param value def4
         * @return Criteria this
         */
        public Criteria andDef4NotEqualTo(String value) {
            addCriterion("def4 <>", value, "def4");
            return (Criteria) this;
        }

        /**
         *andDef4GreaterThan
         * @param value def4
         * @return Criteria this
         */
        public Criteria andDef4GreaterThan(String value) {
            addCriterion("def4 >", value, "def4");
            return (Criteria) this;
        }

        /**
         *andDef4GreaterThanOrEqualTo
         * @param value def4
         * @return Criteria this
         */
        public Criteria andDef4GreaterThanOrEqualTo(String value) {
            addCriterion("def4 >=", value, "def4");
            return (Criteria) this;
        }

        /**
         *andDef4LessThan
         * @param value def4
         * @return Criteria this
         */
        public Criteria andDef4LessThan(String value) {
            addCriterion("def4 <", value, "def4");
            return (Criteria) this;
        }

        /**
         *andDef4LessThanOrEqualTo
         * @param value def4
         * @return Criteria this
         */
        public Criteria andDef4LessThanOrEqualTo(String value) {
            addCriterion("def4 <=", value, "def4");
            return (Criteria) this;
        }

        /**
         *andDef4Like
         * @param value def4
         * @return Criteria this
         */
        public Criteria andDef4Like(String value) {
            addCriterion("def4 like", value, "def4");
            return (Criteria) this;
        }

        /**
         *andDef4NotLike
         * @param value def4
         * @return Criteria this
         */
        public Criteria andDef4NotLike(String value) {
            addCriterion("def4 not like", value, "def4");
            return (Criteria) this;
        }

        /**
         *andDef4In
         * @param values
         * @return Criteria this
         */
        public Criteria andDef4In(List<String> values) {
            addCriterion("def4 in", values, "def4");
            return (Criteria) this;
        }

        /**
         *andDef4NotIn
         * @param values
         * @return Criteria this
         */
        public Criteria andDef4NotIn(List<String> values) {
            addCriterion("def4 not in", values, "def4");
            return (Criteria) this;
        }

        /**
         *andDef4Between
         * @param value1
         * @param value2
         * @return Criteria this
         */
        public Criteria andDef4Between(String value1, String value2) {
            addCriterion("def4 between", value1, value2, "def4");
            return (Criteria) this;
        }

        /**
         *andDef4NotBetween
         * @param value1
         * @param value2
         * @return Criteria this
         */
        public Criteria andDef4NotBetween(String value1, String value2) {
            addCriterion("def4 not between", value1, value2, "def4");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table circleinfo
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        /**
         * 构造方法
         * 继承父类
         */
        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table 
     *
     * @mbggenerated
     */
    public static class Criterion {
        /**
         * condition
         */
        private String condition;

        /**
         * value
         */
        private Object value;

        /**
         * secondValue
         */
        private Object secondValue;

        /**
         * noValue
         */
        private boolean noValue;

        /**
         * singleValue
         */
        private boolean singleValue;

        /**
         * betweenValue
         */
        private boolean betweenValue;

        /**
         * listValue
         */
        private boolean listValue;

        /**
         * typeHandler
         */
        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        /**
         * Criterion构造方法
         * 继承父类
         * @param condition 字符串
         */
        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        /**
         * Criterion构造方法
         * 继承父类
         * @param condition 字符串
         * @param value object对象
         * @param typeHandler 字符串
         */
        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        /**
         * Criterion构造方法
         * @param condition 字符串
         * @param value object对象
         */
        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        /**
         * Criterion构造方法
         * 继承父类
         * @param condition 字符串
         * @param value object对象
         * @param secondValue object对象
         * @param typeHandler 字符串
         */
        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        /**
         * Criterion构造方法
         * 继承父类
         * @param condition 字符串
         * @param value object对象
         * @param secondValue object对象
         */
        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}