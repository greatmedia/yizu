<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
     http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
     http://www.springframework.org/schema/context  
     http://www.springframework.org/schema/context/spring-context-3.0.xsd  
     http://www.springframework.org/schema/tx  
     http://www.springframework.org/schema/tx/spring-tx-3.0.xsd  
     http://www.springframework.org/schema/aop
     http://www.springframework.org/schema/aop/spring-aop-2.0.xsd
     http://www.springframework.org/schema/jdbc  
     http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd">

	<bean id="placeholderConfig" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location">
			<value>classpath:/config/database/mysql.properties</value>
		</property>
	</bean>

	<!-- 启用自动扫描 管理所有base-package下的类根据@注解成bean -->
	<!-- @Service用于标注业务层组件，@Controller用于标注控制层组件（如struts中的action）,
		@Repository用于标注数据访问组件，即DAO组件，而@Component泛指组件，当组件不好归类的时候 -->
	<context:component-scan base-package="com.yizu.proj"></context:component-scan>
	<bean class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor" />


	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<!-- 以ant样式加载匹配的mapper,${databasename}定义在数据库.properties 文件中 oracle.properties 中为 oracle，
			mysql.properties 中为 mysql 。此属性表示通知mybatis 加载所有maps目录下的制定数据库目录下的所有xml文件作为mapper配置文件
		-->
		<property name="mapperLocations" value="classpath:com/yizu/proj/**/maps/${databasename}/*.xml"></property>
		<!-- 
			<property name="configurationProperties">
			<props>
			<prop key="lazyLoadingEnabled">true</prop>
			</props>
			</property>-->
		<property name="configLocation" value="/WEB-INF/classes/mybatis_configuration.xml"></property>
	</bean>

	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>

	<!-- 所有service 均继承此service(parent="baseTransactionProxy")，如此，则service 的所有方法将被纳入事物控制。而不使用下面被注释掉的自动方式 -->
	<bean id="baseTransactionProxy" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean"
		abstract="true">
		<property name="transactionManager" ref="transactionManager" />
		<property name="transactionAttributes">
			<props>
				<prop key="*">PROPAGATION_REQUIRED</prop>
			</props>
		</property>
	</bean>

	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<property name="driverClass">
			<value>${datasource.driverClassName}</value>
		</property>
		<property name="jdbcUrl">
			<value>${datasource.url}</value>
		</property>
		<property name="user">
			<value>${datasource.username}</value>
		</property>
		<property name="password">
			<value>${datasource.password}</value>
		</property>
		<property name="acquireIncrement">
			<value>${c3p0.acquireIncrement}</value>
		</property>
		<property name="initialPoolSize">
			<value>${c3p0.initialPoolSize}</value>
		</property>
		<property name="minPoolSize">
			<value>${c3p0.minPoolSize}</value>
		</property>
		<property name="maxPoolSize">
			<value>${c3p0.maxPoolSize}</value>
		</property>
		<property name="maxIdleTime">
			<value>${c3p0.maxIdleTime}</value>
		</property>
		<property name="idleConnectionTestPeriod">
			<value>${c3p0.idleConnectionTestPeriod}</value>
		</property>
		<property name="maxStatements">
			<value>${c3p0.maxStatements}</value>
		</property>
		<property name="numHelperThreads">
			<value>${c3p0.numHelperThreads}</value>
		</property>
	</bean>

	<bean id="baseService" parent="baseTransactionProxy">
		<property name="target" ref="commonServiceImpl"></property>
	</bean>
	<bean id="commonServiceImpl"
		class="com.yizu.proj.base.service.CommonServiceImpl">
	</bean>
	
	<bean id="struts2XmlUtil" class="com.yizu.proj.utils.Struts2XmlUtil" factory-method="getInstance">
		<property name="extendses">
			<set>
				<value>check-permission</value>
				<value>frame-package</value>
			</set>
		</property>
		<property name="struts2ConfigXmlLocation" value="/struts.xml" />
	</bean>
	
	<import resource="classpath:/config/spring/applicationContext-sys.xml"/>
	<import resource="classpath:/config/spring/applicationContext-frame.xml"/>
</beans>